"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "makeIcon", {
    enumerable: true,
    get: function() {
        return makeIcon;
    }
});
var _interop_require_default = require("@swc/helpers/_/_interop_require_default");
var _object_spread = require("@swc/helpers/_/_object_spread");
var _object_spread_props = require("@swc/helpers/_/_object_spread_props");
var _object_without_properties = require("@swc/helpers/_/_object_without_properties");
var _react = _interop_require_default._(require("react"));
var _browsersymbol = require("./browser-symbol");
var _IconSettings = require("./IconSettings");
var _sprite = require("./sprite");
var _warnOnce = require("./warnOnce");
function iconClass(fragments, param) {
    var classPrefix = param.classPrefix, globalClasses = param.globalClasses;
    var res = "";
    for(var i = 0; i < fragments.length; i++){
        if (classPrefix) {
            res += " " + (classPrefix + fragments[i]);
        }
        if (!classPrefix || globalClasses) {
            res += " " + fragments[i];
        }
    }
    return res;
}
var SvgIcon = function(_param) {
    var _param_width = _param.width, width = _param_width === void 0 ? 0 : _param_width, _param_height = _param.height, height = _param_height === void 0 ? 0 : _param_height, viewBox = _param.viewBox, id = _param.id, _param_className = _param.className, className = _param_className === void 0 ? "" : _param_className, fill = _param.fill, getRootRef = _param.getRootRef, tmp = _param.style, propsStyle = tmp === void 0 ? {} : tmp, title = _param.title, children = _param.children, restProps = _object_without_properties._(_param, [
        "width",
        "height",
        "viewBox",
        "id",
        "className",
        "fill",
        "getRootRef",
        "style",
        "title",
        "children"
    ]);
    var size = Math.max(width, height);
    var iconSettings = _react.default.useContext(_IconSettings.IconSettingsContext);
    var ownClass = iconClass([
        "Icon",
        "Icon--".concat(size),
        "Icon--w-".concat(width),
        "Icon--h-".concat(height),
        "Icon--".concat(id)
    ], iconSettings);
    var style = _object_spread._({
        width: width,
        height: height
    }, propsStyle);
    return /*#__PURE__*/ _react.default.createElement("svg", _object_spread_props._(_object_spread._({
        "aria-hidden": "true",
        display: "block"
    }, restProps), {
        className: "".concat(ownClass, " ").concat(className),
        viewBox: viewBox,
        width: width,
        height: height,
        style: style,
        ref: getRootRef
    }), title && /*#__PURE__*/ _react.default.createElement("title", null, title), /*#__PURE__*/ _react.default.createElement("use", {
        xlinkHref: "#".concat(id),
        style: {
            fill: "currentColor",
            color: fill
        }
    }, children));
};
function makeIcon(componentName, id, viewBox, content, width, height, deprecated, replacement) {
    var mountIcon = function mountIcon() {
        if (!isMounted) {
            (0, _sprite.addSpriteSymbol)(new _browsersymbol.BrowserSymbol({
                content: content
            }));
            isMounted = true;
        }
    };
    var isMounted = false;
    var warn = (0, _warnOnce.warnOnce)(componentName);
    var Icon = function(props) {
        (0, _sprite.useIsomorphicLayoutEffect)(mountIcon, []);
        if (deprecated) {
            var replacementNotice = replacement ? ". Замените на ".concat(replacement) : "";
            warn("Иконка устарела" + replacementNotice);
        }
        return /*#__PURE__*/ _react.default.createElement(SvgIcon, _object_spread_props._(_object_spread._({}, props), {
            viewBox: viewBox,
            id: id,
            width: props.width !== undefined && !isNaN(props.width) ? +props.width : width,
            height: props.height !== undefined && !isNaN(props.height) ? +props.height : height
        }));
    };
    Icon.mountIcon = mountIcon;
    Icon.displayName = componentName;
    return Icon;
} /*#__PURE__*/ 

//# sourceMappingURL=SvgIcon.js.map