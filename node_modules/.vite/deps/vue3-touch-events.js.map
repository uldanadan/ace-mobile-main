{
  "version": 3,
  "sources": ["../../vue3-touch-events/index.js"],
  "sourcesContent": ["/**\n * @project   vue3-touch-events\n * @author    Robin Rodricks, Xavier Julien, Jerry Bendy\n * @since     30/4/2021\n * @url       https://github.com/robinrodricks/vue3-touch-events\n */\n\nfunction touchX(event) {\n    if(event.type.indexOf('mouse') !== -1){\n        return event.clientX;\n    }\n    return event.touches[0].clientX;\n}\n\nfunction touchY(event) {\n    if(event.type.indexOf('mouse') !== -1){\n        return event.clientY;\n    }\n    return event.touches[0].clientY;\n}\n\nvar isPassiveSupported = (function() {\n    var supportsPassive = false;\n    try {\n        var opts = Object.defineProperty({}, 'passive', {\n            get: function() {\n                supportsPassive = true;\n            }\n        });\n        window.addEventListener('test', null, opts);\n    } catch (e) {}\n    return supportsPassive;\n})();\n\nvar vueTouchEvents = {\n    install: function (app, constructorOptions) {\n\t\t\n        var globalOptions = Object.assign({}, {\n            disableClick: false,\n            tapTolerance: 10,  // px\n            swipeTolerance: 30,  // px\n            touchHoldTolerance: 400,  // ms\n            longTapTimeInterval: 400,  // ms\n            touchClass: '',\n\t\t\tdragFrequency: 100, // ms\n\t\t\trollOverFrequency: 100, // ms\n        }, constructorOptions);\n\n        function touchStartEvent(event) {\n            var $this = this.$$touchObj,\n                isTouchEvent = event.type.indexOf('touch') >= 0,\n                isMouseEvent = event.type.indexOf('mouse') >= 0,\n                $el = this;\n\n            if (isTouchEvent) {\n                $this.lastTouchStartTime = event.timeStamp;\n            }\n\n            if (isMouseEvent && $this.lastTouchStartTime && event.timeStamp - $this.lastTouchStartTime < 350) {\n                return;\n            }\n\n            if ($this.touchStarted) {\n                return;\n            }\n\n            addTouchClass(this);\n\n            $this.touchStarted = true; // always true while the element is being PRESSED\n\n            $this.touchMoved = false; // true only when the element is PRESSED and DRAGGED a bit\n            $this.swipeOutBounded = false;\n\n            $this.startX = touchX(event);\n            $this.startY = touchY(event);\n\n            $this.currentX = 0; // always updated with the last mouse X/Y while over the element\n            $this.currentY = 0;\n\n            $this.touchStartTime = event.timeStamp;\n\t\t\t\n\t\t\t// performance: only process swipe events if `swipe.*` event is registered on this element\n\t\t\t$this.hasSwipe = hasEvent(this, 'swipe')\n\t\t\t\t|| hasEvent(this, 'swipe.left') || hasEvent(this, 'swipe.right')\n\t\t\t\t|| hasEvent(this, 'swipe.top') || hasEvent(this, 'swipe.bottom');\n\n\t\t\t// performance: only start hold timer if the `hold` event is registered on this element\n\t\t\tif (hasEvent(this, 'hold')){\n\t\t\t\t\n\t\t\t\t// Trigger touchhold event after `touchHoldTolerance` MS\n\t\t\t\t$this.touchHoldTimer = setTimeout(function() {\n\t\t\t\t\t$this.touchHoldTimer = null;\n\t\t\t\t\ttriggerEvent(event, $el, 'hold');\n\t\t\t\t}, $this.options.touchHoldTolerance);\n\t\t\t}\n\t\t\t\n            triggerEvent(event, this, 'press');\n        }\n\n        function touchMoveEvent(event) {\n            var $this = this.$$touchObj;\n\t\t\t\n\t\t\tvar curX = touchX(event);\n\t\t\tvar curY = touchY(event);\n\n\t\t\tvar movedAgain = ($this.currentX != curX) || ($this.currentY != curY);\n\t\t\t\n            $this.currentX = curX;\n            $this.currentY = curY;\n\n            if (!$this.touchMoved) {\n                var tapTolerance = $this.options.tapTolerance;\n\n                $this.touchMoved = Math.abs($this.startX - $this.currentX) > tapTolerance ||\n\t\t\t\t\t\t\t\t   Math.abs($this.startY - $this.currentY) > tapTolerance;\n\n\t\t\t\t// trigger `drag.once` only once after mouse FIRST moved while dragging the element\n\t\t\t\t// (`touchMoved` is the flag that indicates we no longer need to trigger this)\n                if($this.touchMoved){\n                    cancelTouchHoldTimer($this);\n                    triggerEvent(event, this, 'drag.once');\n                }\n\n\t\t\t// performance: only process swipe events if `swipe.*` event is registered on this element\n            } else if ($this.hasSwipe && !$this.swipeOutBounded) {\n\t\t\t\tvar swipeOutBounded = $this.options.swipeTolerance;\n\n\t\t\t\t$this.swipeOutBounded = Math.abs($this.startX - $this.currentX) > swipeOutBounded &&\n\t\t\t\t\tMath.abs($this.startY - $this.currentY) > swipeOutBounded;\n            }\n\n\t\t\t// only trigger `rollover` event if cursor actually moved over this element\n            if(hasEvent(this, 'rollover') && movedAgain){\n\t\t\t\t\n\t\t\t\t// throttle the `rollover` event based on `rollOverFrequency`\n\t\t\t\tvar now = event.timeStamp;\n\t\t\t\tvar throttle = $this.options.rollOverFrequency;\n\t\t\t\tif ($this.touchRollTime == null || now > ($this.touchRollTime + throttle)){\n\t\t\t\t\t$this.touchRollTime = now;\n\t\t\t\t\t\n\t\t\t\t\ttriggerEvent(event, this, 'rollover');\n\t\t\t\t}\n            }\n\n\t\t\t// only trigger `drag` event if cursor actually moved and if we are still dragging this element\n            if(hasEvent(this, 'drag') && $this.touchStarted && $this.touchMoved && movedAgain){\n\t\t\t\t\n\t\t\t\t// throttle the `drag` event based on `dragFrequency`\n\t\t\t\tvar now = event.timeStamp;\n\t\t\t\tvar throttle = $this.options.dragFrequency;\n\t\t\t\tif ($this.touchDragTime == null || now > ($this.touchDragTime + throttle)){\n\t\t\t\t\t$this.touchDragTime = now;\n\t\t\t\t\t\n\t\t\t\t\ttriggerEvent(event, this, 'drag');\n\t\t\t\t}\n            }\n        }\n\n        function touchCancelEvent() {\n            var $this = this.$$touchObj;\n\n            cancelTouchHoldTimer($this);\n            removeTouchClass(this);\n\n            $this.touchStarted = $this.touchMoved = false;\n            $this.startX = $this.startY = 0;\n        }\n\n        function touchEndEvent(event) {\n            var $this = this.$$touchObj,\n                isTouchEvent = event.type.indexOf('touch') >= 0,\n                isMouseEvent = event.type.indexOf('mouse') >= 0;\n\n            if (isTouchEvent) {\n                $this.lastTouchEndTime = event.timeStamp;\n            }\n\n            var touchholdEnd = isTouchEvent && !$this.touchHoldTimer;\n            cancelTouchHoldTimer($this);\n\n            $this.touchStarted = false;\n\n            removeTouchClass(this);\n\n            if (isMouseEvent && $this.lastTouchEndTime && event.timeStamp - $this.lastTouchEndTime < 350) {\n                return;\n            }\n\n            // trigger `end` event when touch stopped\n            triggerEvent(event, this, 'release');\n\n            if (!$this.touchMoved) {\n                // detect if this is a longTap event or not\n                if (hasEvent(this, 'longtap') && event.timeStamp - $this.touchStartTime > $this.options.longTapTimeInterval) {\n                    if (event.cancelable) {\n                        event.preventDefault();\n                    }\n                    triggerEvent(event, this, 'longtap');\n\n                } else if (hasEvent(this, 'hold') && touchholdEnd) {\n                    if (event.cancelable) {\n                        event.preventDefault();\n                    }\n                    return;\n                } else {\n                    // emit tap event\n                    triggerEvent(event, this, 'tap');\n                }\n\n\t\t\t// performance: only process swipe events if `swipe.*` event is registered on this element\n            } else if ($this.hasSwipe && !$this.swipeOutBounded) {\n                var swipeOutBounded = $this.options.swipeTolerance,\n                    direction,\n                    distanceY = Math.abs($this.startY - $this.currentY),\n                    distanceX = Math.abs($this.startX - $this.currentX);\n\n                if (distanceY > swipeOutBounded || distanceX > swipeOutBounded) {\n                    if (distanceY > swipeOutBounded) {\n                        direction = $this.startY > $this.currentY ? 'top' : 'bottom';\n                    } else {\n                        direction = $this.startX > $this.currentX ? 'left' : 'right';\n                    }\n\n                    // Only emit the specified event when it has modifiers\n                    if (hasEvent(this, 'swipe.' + direction)) {\n                        triggerEvent(event, this, 'swipe.' + direction, direction);\n                    } else {\n                        // Emit a common event when it has no any modifier\n                        triggerEvent(event, this, 'swipe', direction);\n                    }\n                }\n            }\n        }\n\n        function mouseEnterEvent() {\n            addTouchClass(this);\n        }\n\n        function mouseLeaveEvent() {\n            removeTouchClass(this);\n        }\n\n        function hasEvent($el, eventType) {\n            var callbacks = $el.$$touchObj.callbacks[eventType];\n\t\t\treturn (callbacks != null && callbacks.length > 0);\n\t\t}\n\t\t\n        function triggerEvent(e, $el, eventType, param) {\n            var $this = $el.$$touchObj;\n\n            // get the subscribers for this event\n            var callbacks = $this.callbacks[eventType];\n\t\t\t\n\t\t\t// exit if no subscribers to this particular event\n            if (callbacks == null || callbacks.length === 0) {\n                return null;\n            }\n\n\t\t\t// per callback\n            for (var i = 0; i < callbacks.length; i++) {\n                var binding = callbacks[i];\n\n                if (binding.modifiers.stop) {\n                    e.stopPropagation();\n                }\n\n                if (binding.modifiers.prevent) {\n                    e.preventDefault();\n                }\n\n                // handle `self` modifier`\n                if (binding.modifiers.self && e.target !== e.currentTarget) {\n                    continue;\n                }\n\n                if (typeof binding.value === 'function') {\n                    if (param) {\n                        binding.value(param, e);\n                    } else {\n                        binding.value(e);\n                    }\n                }\n            }\n        }\n\n        function addTouchClass($el) {\n            var className = $el.$$touchObj.options.touchClass;\n            className && $el.classList.add(className);\n        }\n\n        function removeTouchClass($el) {\n            var className = $el.$$touchObj.options.touchClass;\n            className && $el.classList.remove(className);\n        }\n\n        function cancelTouchHoldTimer($this) {\n            if ($this.touchHoldTimer) {\n                clearTimeout($this.touchHoldTimer);\n                $this.touchHoldTimer = null;\n            }\n        }\n\n        function buildTouchObj($el, extraOptions) {\n            var touchObj = $el.$$touchObj || {\n                // an object contains all callbacks registered,\n                // key is event name, value is an array\n                callbacks: {},\n                // prevent bind twice, set to true when event bound\n                hasBindTouchEvents: false,\n                // default options, would be override by v-touch-options\n                options: globalOptions\n            };\n            if (extraOptions) {\n                touchObj.options = Object.assign({}, touchObj.options, extraOptions);\n            }\n            $el.$$touchObj = touchObj;\n            return $el.$$touchObj;\n        }\n\n        app.directive('touch', {\n            beforeMount: function ($el, binding) {\n                // build a touch configuration object\n                var $this = buildTouchObj($el);\n                // declare passive option for the event listener. Defaults to { passive: true } if supported\n                var passiveOpt = isPassiveSupported ? { passive: true } : false;\n                // register callback\n                var eventType = binding.arg || 'tap';\n                switch (eventType) {\n                    case 'swipe':\n                        var _m = binding.modifiers;\n                        if (_m.left || _m.right || _m.top || _m.bottom) {\n                            for (var i in binding.modifiers) {\n                                if (['left', 'right', 'top', 'bottom'].indexOf(i) >= 0) {\n                                    var _e = 'swipe.' + i;\n                                    $this.callbacks[_e] = $this.callbacks[_e] || [];\n                                    $this.callbacks[_e].push(binding);\n                                }\n                            }\n                        } else {\n                            $this.callbacks.swipe = $this.callbacks.swipe || [];\n                            $this.callbacks.swipe.push(binding);\n                        }\n                        break;\n\n                    case 'press':\n                    case 'drag':\n                        if (binding.modifiers.disablePassive) {\n                            // change the passive option for the `drag` event if disablePassive modifier exists\n                            passiveOpt = false;\n                        }\n                    default:\n                        $this.callbacks[eventType] = $this.callbacks[eventType] || [];\n                        $this.callbacks[eventType].push(binding);\n                }\n\n                // prevent bind twice\n                if ($this.hasBindTouchEvents) {\n                    return;\n                }\n\n                $el.addEventListener('touchstart', touchStartEvent, passiveOpt);\n                $el.addEventListener('touchmove', touchMoveEvent, passiveOpt);\n                $el.addEventListener('touchcancel', touchCancelEvent);\n                $el.addEventListener('touchend', touchEndEvent);\n\n                if (!$this.options.disableClick) {\n                    $el.addEventListener('mousedown', touchStartEvent);\n                    $el.addEventListener('mousemove', touchMoveEvent);\n                    $el.addEventListener('mouseup', touchEndEvent);\n                    $el.addEventListener('mouseenter', mouseEnterEvent);\n                    $el.addEventListener('mouseleave', mouseLeaveEvent);\n                }\n\n                // set bind mark to true\n                $this.hasBindTouchEvents = true;\n            },\n\n            unmounted: function ($el) {\n                $el.removeEventListener('touchstart', touchStartEvent);\n                $el.removeEventListener('touchmove', touchMoveEvent);\n                $el.removeEventListener('touchcancel', touchCancelEvent);\n                $el.removeEventListener('touchend', touchEndEvent);\n\n                if ($el.$$touchObj && !$el.$$touchObj.options.disableClick) {\n                    $el.removeEventListener('mousedown', touchStartEvent);\n                    $el.removeEventListener('mousemove', touchMoveEvent);\n                    $el.removeEventListener('mouseup', touchEndEvent);\n                    $el.removeEventListener('mouseenter', mouseEnterEvent);\n                    $el.removeEventListener('mouseleave', mouseLeaveEvent);\n                }\n\n                // remove vars\n                delete $el.$$touchObj;\n            }\n        });\n\n        app.directive('touch-class', {\n            beforeMount: function ($el, binding) {\n                buildTouchObj($el, {\n                    touchClass: binding.value\n                });\n            }\n        });\n\n        app.directive('touch-options', {\n            beforeMount: function($el, binding) {\n                buildTouchObj($el, binding.value);\n            }\n        });\n    }\n};\n\n/*\n * Exports\n */\nexport default vueTouchEvents"],
  "mappings": "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",
  "names": []
}
