{
  "version": 3,
  "sources": ["../../qr-code-styling/lib/webpack:/QRCodeStyling/webpack/universalModuleDefinition", "../../qr-code-styling/lib/webpack:/QRCodeStyling/node_modules/qrcode-generator/qrcode.js", "../../qr-code-styling/lib/webpack:/QRCodeStyling/src/tools/merge.ts", "../../qr-code-styling/lib/webpack:/QRCodeStyling/src/tools/downloadURI.ts", "../../qr-code-styling/lib/webpack:/QRCodeStyling/src/tools/toDataUrl.ts", "../../qr-code-styling/lib/webpack:/QRCodeStyling/src/constants/errorCorrectionPercents.ts", "../../qr-code-styling/lib/webpack:/QRCodeStyling/src/figures/dot/QRDot.ts", "../../qr-code-styling/lib/webpack:/QRCodeStyling/src/constants/dotTypes.ts", "../../qr-code-styling/lib/webpack:/QRCodeStyling/src/figures/cornerSquare/QRCornerSquare.ts", "../../qr-code-styling/lib/webpack:/QRCodeStyling/src/constants/cornerSquareTypes.ts", "../../qr-code-styling/lib/webpack:/QRCodeStyling/src/figures/cornerDot/QRCornerDot.ts", "../../qr-code-styling/lib/webpack:/QRCodeStyling/src/constants/cornerDotTypes.ts", "../../qr-code-styling/lib/webpack:/QRCodeStyling/src/constants/shapeTypes.ts", "../../qr-code-styling/lib/webpack:/QRCodeStyling/src/core/QRSVG.ts", "../../qr-code-styling/lib/webpack:/QRCodeStyling/src/tools/calculateImageSize.ts", "../../qr-code-styling/lib/webpack:/QRCodeStyling/src/constants/gradientTypes.ts", "../../qr-code-styling/lib/webpack:/QRCodeStyling/src/constants/drawTypes.ts", "../../qr-code-styling/lib/webpack:/QRCodeStyling/src/constants/qrTypes.ts", "../../qr-code-styling/lib/webpack:/QRCodeStyling/src/core/QROptions.ts", "../../qr-code-styling/lib/webpack:/QRCodeStyling/src/constants/errorCorrectionLevels.ts", "../../qr-code-styling/lib/webpack:/QRCodeStyling/src/tools/sanitizeOptions.ts", "../../qr-code-styling/lib/webpack:/QRCodeStyling/src/index.ts", "../../qr-code-styling/lib/webpack:/QRCodeStyling/src/core/QRCodeStyling.ts", "../../qr-code-styling/lib/webpack:/QRCodeStyling/src/tools/getMode.ts", "../../qr-code-styling/lib/webpack:/QRCodeStyling/src/constants/modes.ts", "../../qr-code-styling/lib/webpack:/QRCodeStyling/webpack/bootstrap", "../../qr-code-styling/lib/webpack:/QRCodeStyling/webpack/startup", "../../qr-code-styling/lib/webpack:/QRCodeStyling/webpack/runtime/compat get default export", "../../qr-code-styling/lib/webpack:/QRCodeStyling/webpack/runtime/define property getters", "../../qr-code-styling/lib/webpack:/QRCodeStyling/webpack/runtime/hasOwnProperty shorthand"],
  "sourcesContent": ["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"QRCodeStyling\"] = factory();\n\telse\n\t\troot[\"QRCodeStyling\"] = factory();\n})(self, function() {\nreturn ", "//---------------------------------------------------------------------\n//\n// QR Code Generator for JavaScript\n//\n// Copyright (c) 2009 Kazuhiko Arase\n//\n// URL: http://www.d-project.com/\n//\n// Licensed under the MIT license:\n//  http://www.opensource.org/licenses/mit-license.php\n//\n// The word 'QR Code' is registered trademark of\n// DENSO WAVE INCORPORATED\n//  http://www.denso-wave.com/qrcode/faqpatent-e.html\n//\n//---------------------------------------------------------------------\n\nvar qrcode = function() {\n\n  //---------------------------------------------------------------------\n  // qrcode\n  //---------------------------------------------------------------------\n\n  /**\n   * qrcode\n   * @param typeNumber 1 to 40\n   * @param errorCorrectionLevel 'L','M','Q','H'\n   */\n  var qrcode = function(typeNumber, errorCorrectionLevel) {\n\n    var PAD0 = 0xEC;\n    var PAD1 = 0x11;\n\n    var _typeNumber = typeNumber;\n    var _errorCorrectionLevel = QRErrorCorrectionLevel[errorCorrectionLevel];\n    var _modules = null;\n    var _moduleCount = 0;\n    var _dataCache = null;\n    var _dataList = [];\n\n    var _this = {};\n\n    var makeImpl = function(test, maskPattern) {\n\n      _moduleCount = _typeNumber * 4 + 17;\n      _modules = function(moduleCount) {\n        var modules = new Array(moduleCount);\n        for (var row = 0; row < moduleCount; row += 1) {\n          modules[row] = new Array(moduleCount);\n          for (var col = 0; col < moduleCount; col += 1) {\n            modules[row][col] = null;\n          }\n        }\n        return modules;\n      }(_moduleCount);\n\n      setupPositionProbePattern(0, 0);\n      setupPositionProbePattern(_moduleCount - 7, 0);\n      setupPositionProbePattern(0, _moduleCount - 7);\n      setupPositionAdjustPattern();\n      setupTimingPattern();\n      setupTypeInfo(test, maskPattern);\n\n      if (_typeNumber >= 7) {\n        setupTypeNumber(test);\n      }\n\n      if (_dataCache == null) {\n        _dataCache = createData(_typeNumber, _errorCorrectionLevel, _dataList);\n      }\n\n      mapData(_dataCache, maskPattern);\n    };\n\n    var setupPositionProbePattern = function(row, col) {\n\n      for (var r = -1; r <= 7; r += 1) {\n\n        if (row + r <= -1 || _moduleCount <= row + r) continue;\n\n        for (var c = -1; c <= 7; c += 1) {\n\n          if (col + c <= -1 || _moduleCount <= col + c) continue;\n\n          if ( (0 <= r && r <= 6 && (c == 0 || c == 6) )\n              || (0 <= c && c <= 6 && (r == 0 || r == 6) )\n              || (2 <= r && r <= 4 && 2 <= c && c <= 4) ) {\n            _modules[row + r][col + c] = true;\n          } else {\n            _modules[row + r][col + c] = false;\n          }\n        }\n      }\n    };\n\n    var getBestMaskPattern = function() {\n\n      var minLostPoint = 0;\n      var pattern = 0;\n\n      for (var i = 0; i < 8; i += 1) {\n\n        makeImpl(true, i);\n\n        var lostPoint = QRUtil.getLostPoint(_this);\n\n        if (i == 0 || minLostPoint > lostPoint) {\n          minLostPoint = lostPoint;\n          pattern = i;\n        }\n      }\n\n      return pattern;\n    };\n\n    var setupTimingPattern = function() {\n\n      for (var r = 8; r < _moduleCount - 8; r += 1) {\n        if (_modules[r][6] != null) {\n          continue;\n        }\n        _modules[r][6] = (r % 2 == 0);\n      }\n\n      for (var c = 8; c < _moduleCount - 8; c += 1) {\n        if (_modules[6][c] != null) {\n          continue;\n        }\n        _modules[6][c] = (c % 2 == 0);\n      }\n    };\n\n    var setupPositionAdjustPattern = function() {\n\n      var pos = QRUtil.getPatternPosition(_typeNumber);\n\n      for (var i = 0; i < pos.length; i += 1) {\n\n        for (var j = 0; j < pos.length; j += 1) {\n\n          var row = pos[i];\n          var col = pos[j];\n\n          if (_modules[row][col] != null) {\n            continue;\n          }\n\n          for (var r = -2; r <= 2; r += 1) {\n\n            for (var c = -2; c <= 2; c += 1) {\n\n              if (r == -2 || r == 2 || c == -2 || c == 2\n                  || (r == 0 && c == 0) ) {\n                _modules[row + r][col + c] = true;\n              } else {\n                _modules[row + r][col + c] = false;\n              }\n            }\n          }\n        }\n      }\n    };\n\n    var setupTypeNumber = function(test) {\n\n      var bits = QRUtil.getBCHTypeNumber(_typeNumber);\n\n      for (var i = 0; i < 18; i += 1) {\n        var mod = (!test && ( (bits >> i) & 1) == 1);\n        _modules[Math.floor(i / 3)][i % 3 + _moduleCount - 8 - 3] = mod;\n      }\n\n      for (var i = 0; i < 18; i += 1) {\n        var mod = (!test && ( (bits >> i) & 1) == 1);\n        _modules[i % 3 + _moduleCount - 8 - 3][Math.floor(i / 3)] = mod;\n      }\n    };\n\n    var setupTypeInfo = function(test, maskPattern) {\n\n      var data = (_errorCorrectionLevel << 3) | maskPattern;\n      var bits = QRUtil.getBCHTypeInfo(data);\n\n      // vertical\n      for (var i = 0; i < 15; i += 1) {\n\n        var mod = (!test && ( (bits >> i) & 1) == 1);\n\n        if (i < 6) {\n          _modules[i][8] = mod;\n        } else if (i < 8) {\n          _modules[i + 1][8] = mod;\n        } else {\n          _modules[_moduleCount - 15 + i][8] = mod;\n        }\n      }\n\n      // horizontal\n      for (var i = 0; i < 15; i += 1) {\n\n        var mod = (!test && ( (bits >> i) & 1) == 1);\n\n        if (i < 8) {\n          _modules[8][_moduleCount - i - 1] = mod;\n        } else if (i < 9) {\n          _modules[8][15 - i - 1 + 1] = mod;\n        } else {\n          _modules[8][15 - i - 1] = mod;\n        }\n      }\n\n      // fixed module\n      _modules[_moduleCount - 8][8] = (!test);\n    };\n\n    var mapData = function(data, maskPattern) {\n\n      var inc = -1;\n      var row = _moduleCount - 1;\n      var bitIndex = 7;\n      var byteIndex = 0;\n      var maskFunc = QRUtil.getMaskFunction(maskPattern);\n\n      for (var col = _moduleCount - 1; col > 0; col -= 2) {\n\n        if (col == 6) col -= 1;\n\n        while (true) {\n\n          for (var c = 0; c < 2; c += 1) {\n\n            if (_modules[row][col - c] == null) {\n\n              var dark = false;\n\n              if (byteIndex < data.length) {\n                dark = ( ( (data[byteIndex] >>> bitIndex) & 1) == 1);\n              }\n\n              var mask = maskFunc(row, col - c);\n\n              if (mask) {\n                dark = !dark;\n              }\n\n              _modules[row][col - c] = dark;\n              bitIndex -= 1;\n\n              if (bitIndex == -1) {\n                byteIndex += 1;\n                bitIndex = 7;\n              }\n            }\n          }\n\n          row += inc;\n\n          if (row < 0 || _moduleCount <= row) {\n            row -= inc;\n            inc = -inc;\n            break;\n          }\n        }\n      }\n    };\n\n    var createBytes = function(buffer, rsBlocks) {\n\n      var offset = 0;\n\n      var maxDcCount = 0;\n      var maxEcCount = 0;\n\n      var dcdata = new Array(rsBlocks.length);\n      var ecdata = new Array(rsBlocks.length);\n\n      for (var r = 0; r < rsBlocks.length; r += 1) {\n\n        var dcCount = rsBlocks[r].dataCount;\n        var ecCount = rsBlocks[r].totalCount - dcCount;\n\n        maxDcCount = Math.max(maxDcCount, dcCount);\n        maxEcCount = Math.max(maxEcCount, ecCount);\n\n        dcdata[r] = new Array(dcCount);\n\n        for (var i = 0; i < dcdata[r].length; i += 1) {\n          dcdata[r][i] = 0xff & buffer.getBuffer()[i + offset];\n        }\n        offset += dcCount;\n\n        var rsPoly = QRUtil.getErrorCorrectPolynomial(ecCount);\n        var rawPoly = qrPolynomial(dcdata[r], rsPoly.getLength() - 1);\n\n        var modPoly = rawPoly.mod(rsPoly);\n        ecdata[r] = new Array(rsPoly.getLength() - 1);\n        for (var i = 0; i < ecdata[r].length; i += 1) {\n          var modIndex = i + modPoly.getLength() - ecdata[r].length;\n          ecdata[r][i] = (modIndex >= 0)? modPoly.getAt(modIndex) : 0;\n        }\n      }\n\n      var totalCodeCount = 0;\n      for (var i = 0; i < rsBlocks.length; i += 1) {\n        totalCodeCount += rsBlocks[i].totalCount;\n      }\n\n      var data = new Array(totalCodeCount);\n      var index = 0;\n\n      for (var i = 0; i < maxDcCount; i += 1) {\n        for (var r = 0; r < rsBlocks.length; r += 1) {\n          if (i < dcdata[r].length) {\n            data[index] = dcdata[r][i];\n            index += 1;\n          }\n        }\n      }\n\n      for (var i = 0; i < maxEcCount; i += 1) {\n        for (var r = 0; r < rsBlocks.length; r += 1) {\n          if (i < ecdata[r].length) {\n            data[index] = ecdata[r][i];\n            index += 1;\n          }\n        }\n      }\n\n      return data;\n    };\n\n    var createData = function(typeNumber, errorCorrectionLevel, dataList) {\n\n      var rsBlocks = QRRSBlock.getRSBlocks(typeNumber, errorCorrectionLevel);\n\n      var buffer = qrBitBuffer();\n\n      for (var i = 0; i < dataList.length; i += 1) {\n        var data = dataList[i];\n        buffer.put(data.getMode(), 4);\n        buffer.put(data.getLength(), QRUtil.getLengthInBits(data.getMode(), typeNumber) );\n        data.write(buffer);\n      }\n\n      // calc num max data.\n      var totalDataCount = 0;\n      for (var i = 0; i < rsBlocks.length; i += 1) {\n        totalDataCount += rsBlocks[i].dataCount;\n      }\n\n      if (buffer.getLengthInBits() > totalDataCount * 8) {\n        throw 'code length overflow. ('\n          + buffer.getLengthInBits()\n          + '>'\n          + totalDataCount * 8\n          + ')';\n      }\n\n      // end code\n      if (buffer.getLengthInBits() + 4 <= totalDataCount * 8) {\n        buffer.put(0, 4);\n      }\n\n      // padding\n      while (buffer.getLengthInBits() % 8 != 0) {\n        buffer.putBit(false);\n      }\n\n      // padding\n      while (true) {\n\n        if (buffer.getLengthInBits() >= totalDataCount * 8) {\n          break;\n        }\n        buffer.put(PAD0, 8);\n\n        if (buffer.getLengthInBits() >= totalDataCount * 8) {\n          break;\n        }\n        buffer.put(PAD1, 8);\n      }\n\n      return createBytes(buffer, rsBlocks);\n    };\n\n    _this.addData = function(data, mode) {\n\n      mode = mode || 'Byte';\n\n      var newData = null;\n\n      switch(mode) {\n      case 'Numeric' :\n        newData = qrNumber(data);\n        break;\n      case 'Alphanumeric' :\n        newData = qrAlphaNum(data);\n        break;\n      case 'Byte' :\n        newData = qr8BitByte(data);\n        break;\n      case 'Kanji' :\n        newData = qrKanji(data);\n        break;\n      default :\n        throw 'mode:' + mode;\n      }\n\n      _dataList.push(newData);\n      _dataCache = null;\n    };\n\n    _this.isDark = function(row, col) {\n      if (row < 0 || _moduleCount <= row || col < 0 || _moduleCount <= col) {\n        throw row + ',' + col;\n      }\n      return _modules[row][col];\n    };\n\n    _this.getModuleCount = function() {\n      return _moduleCount;\n    };\n\n    _this.make = function() {\n      if (_typeNumber < 1) {\n        var typeNumber = 1;\n\n        for (; typeNumber < 40; typeNumber++) {\n          var rsBlocks = QRRSBlock.getRSBlocks(typeNumber, _errorCorrectionLevel);\n          var buffer = qrBitBuffer();\n\n          for (var i = 0; i < _dataList.length; i++) {\n            var data = _dataList[i];\n            buffer.put(data.getMode(), 4);\n            buffer.put(data.getLength(), QRUtil.getLengthInBits(data.getMode(), typeNumber) );\n            data.write(buffer);\n          }\n\n          var totalDataCount = 0;\n          for (var i = 0; i < rsBlocks.length; i++) {\n            totalDataCount += rsBlocks[i].dataCount;\n          }\n\n          if (buffer.getLengthInBits() <= totalDataCount * 8) {\n            break;\n          }\n        }\n\n        _typeNumber = typeNumber;\n      }\n\n      makeImpl(false, getBestMaskPattern() );\n    };\n\n    _this.createTableTag = function(cellSize, margin) {\n\n      cellSize = cellSize || 2;\n      margin = (typeof margin == 'undefined')? cellSize * 4 : margin;\n\n      var qrHtml = '';\n\n      qrHtml += '<table style=\"';\n      qrHtml += ' border-width: 0px; border-style: none;';\n      qrHtml += ' border-collapse: collapse;';\n      qrHtml += ' padding: 0px; margin: ' + margin + 'px;';\n      qrHtml += '\">';\n      qrHtml += '<tbody>';\n\n      for (var r = 0; r < _this.getModuleCount(); r += 1) {\n\n        qrHtml += '<tr>';\n\n        for (var c = 0; c < _this.getModuleCount(); c += 1) {\n          qrHtml += '<td style=\"';\n          qrHtml += ' border-width: 0px; border-style: none;';\n          qrHtml += ' border-collapse: collapse;';\n          qrHtml += ' padding: 0px; margin: 0px;';\n          qrHtml += ' width: ' + cellSize + 'px;';\n          qrHtml += ' height: ' + cellSize + 'px;';\n          qrHtml += ' background-color: ';\n          qrHtml += _this.isDark(r, c)? '#000000' : '#ffffff';\n          qrHtml += ';';\n          qrHtml += '\"/>';\n        }\n\n        qrHtml += '</tr>';\n      }\n\n      qrHtml += '</tbody>';\n      qrHtml += '</table>';\n\n      return qrHtml;\n    };\n\n    _this.createSvgTag = function(cellSize, margin, alt, title) {\n\n      var opts = {};\n      if (typeof arguments[0] == 'object') {\n        // Called by options.\n        opts = arguments[0];\n        // overwrite cellSize and margin.\n        cellSize = opts.cellSize;\n        margin = opts.margin;\n        alt = opts.alt;\n        title = opts.title;\n      }\n\n      cellSize = cellSize || 2;\n      margin = (typeof margin == 'undefined')? cellSize * 4 : margin;\n\n      // Compose alt property surrogate\n      alt = (typeof alt === 'string') ? {text: alt} : alt || {};\n      alt.text = alt.text || null;\n      alt.id = (alt.text) ? alt.id || 'qrcode-description' : null;\n\n      // Compose title property surrogate\n      title = (typeof title === 'string') ? {text: title} : title || {};\n      title.text = title.text || null;\n      title.id = (title.text) ? title.id || 'qrcode-title' : null;\n\n      var size = _this.getModuleCount() * cellSize + margin * 2;\n      var c, mc, r, mr, qrSvg='', rect;\n\n      rect = 'l' + cellSize + ',0 0,' + cellSize +\n        ' -' + cellSize + ',0 0,-' + cellSize + 'z ';\n\n      qrSvg += '<svg version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\"';\n      qrSvg += !opts.scalable ? ' width=\"' + size + 'px\" height=\"' + size + 'px\"' : '';\n      qrSvg += ' viewBox=\"0 0 ' + size + ' ' + size + '\" ';\n      qrSvg += ' preserveAspectRatio=\"xMinYMin meet\"';\n      qrSvg += (title.text || alt.text) ? ' role=\"img\" aria-labelledby=\"' +\n          escapeXml([title.id, alt.id].join(' ').trim() ) + '\"' : '';\n      qrSvg += '>';\n      qrSvg += (title.text) ? '<title id=\"' + escapeXml(title.id) + '\">' +\n          escapeXml(title.text) + '</title>' : '';\n      qrSvg += (alt.text) ? '<description id=\"' + escapeXml(alt.id) + '\">' +\n          escapeXml(alt.text) + '</description>' : '';\n      qrSvg += '<rect width=\"100%\" height=\"100%\" fill=\"white\" cx=\"0\" cy=\"0\"/>';\n      qrSvg += '<path d=\"';\n\n      for (r = 0; r < _this.getModuleCount(); r += 1) {\n        mr = r * cellSize + margin;\n        for (c = 0; c < _this.getModuleCount(); c += 1) {\n          if (_this.isDark(r, c) ) {\n            mc = c*cellSize+margin;\n            qrSvg += 'M' + mc + ',' + mr + rect;\n          }\n        }\n      }\n\n      qrSvg += '\" stroke=\"transparent\" fill=\"black\"/>';\n      qrSvg += '</svg>';\n\n      return qrSvg;\n    };\n\n    _this.createDataURL = function(cellSize, margin) {\n\n      cellSize = cellSize || 2;\n      margin = (typeof margin == 'undefined')? cellSize * 4 : margin;\n\n      var size = _this.getModuleCount() * cellSize + margin * 2;\n      var min = margin;\n      var max = size - margin;\n\n      return createDataURL(size, size, function(x, y) {\n        if (min <= x && x < max && min <= y && y < max) {\n          var c = Math.floor( (x - min) / cellSize);\n          var r = Math.floor( (y - min) / cellSize);\n          return _this.isDark(r, c)? 0 : 1;\n        } else {\n          return 1;\n        }\n      } );\n    };\n\n    _this.createImgTag = function(cellSize, margin, alt) {\n\n      cellSize = cellSize || 2;\n      margin = (typeof margin == 'undefined')? cellSize * 4 : margin;\n\n      var size = _this.getModuleCount() * cellSize + margin * 2;\n\n      var img = '';\n      img += '<img';\n      img += '\\u0020src=\"';\n      img += _this.createDataURL(cellSize, margin);\n      img += '\"';\n      img += '\\u0020width=\"';\n      img += size;\n      img += '\"';\n      img += '\\u0020height=\"';\n      img += size;\n      img += '\"';\n      if (alt) {\n        img += '\\u0020alt=\"';\n        img += escapeXml(alt);\n        img += '\"';\n      }\n      img += '/>';\n\n      return img;\n    };\n\n    var escapeXml = function(s) {\n      var escaped = '';\n      for (var i = 0; i < s.length; i += 1) {\n        var c = s.charAt(i);\n        switch(c) {\n        case '<': escaped += '&lt;'; break;\n        case '>': escaped += '&gt;'; break;\n        case '&': escaped += '&amp;'; break;\n        case '\"': escaped += '&quot;'; break;\n        default : escaped += c; break;\n        }\n      }\n      return escaped;\n    };\n\n    var _createHalfASCII = function(margin) {\n      var cellSize = 1;\n      margin = (typeof margin == 'undefined')? cellSize * 2 : margin;\n\n      var size = _this.getModuleCount() * cellSize + margin * 2;\n      var min = margin;\n      var max = size - margin;\n\n      var y, x, r1, r2, p;\n\n      var blocks = {\n        '██': '█',\n        '█ ': '▀',\n        ' █': '▄',\n        '  ': ' '\n      };\n\n      var blocksLastLineNoMargin = {\n        '██': '▀',\n        '█ ': '▀',\n        ' █': ' ',\n        '  ': ' '\n      };\n\n      var ascii = '';\n      for (y = 0; y < size; y += 2) {\n        r1 = Math.floor((y - min) / cellSize);\n        r2 = Math.floor((y + 1 - min) / cellSize);\n        for (x = 0; x < size; x += 1) {\n          p = '█';\n\n          if (min <= x && x < max && min <= y && y < max && _this.isDark(r1, Math.floor((x - min) / cellSize))) {\n            p = ' ';\n          }\n\n          if (min <= x && x < max && min <= y+1 && y+1 < max && _this.isDark(r2, Math.floor((x - min) / cellSize))) {\n            p += ' ';\n          }\n          else {\n            p += '█';\n          }\n\n          // Output 2 characters per pixel, to create full square. 1 character per pixels gives only half width of square.\n          ascii += (margin < 1 && y+1 >= max) ? blocksLastLineNoMargin[p] : blocks[p];\n        }\n\n        ascii += '\\n';\n      }\n\n      if (size % 2 && margin > 0) {\n        return ascii.substring(0, ascii.length - size - 1) + Array(size+1).join('▀');\n      }\n\n      return ascii.substring(0, ascii.length-1);\n    };\n\n    _this.createASCII = function(cellSize, margin) {\n      cellSize = cellSize || 1;\n\n      if (cellSize < 2) {\n        return _createHalfASCII(margin);\n      }\n\n      cellSize -= 1;\n      margin = (typeof margin == 'undefined')? cellSize * 2 : margin;\n\n      var size = _this.getModuleCount() * cellSize + margin * 2;\n      var min = margin;\n      var max = size - margin;\n\n      var y, x, r, p;\n\n      var white = Array(cellSize+1).join('██');\n      var black = Array(cellSize+1).join('  ');\n\n      var ascii = '';\n      var line = '';\n      for (y = 0; y < size; y += 1) {\n        r = Math.floor( (y - min) / cellSize);\n        line = '';\n        for (x = 0; x < size; x += 1) {\n          p = 1;\n\n          if (min <= x && x < max && min <= y && y < max && _this.isDark(r, Math.floor((x - min) / cellSize))) {\n            p = 0;\n          }\n\n          // Output 2 characters per pixel, to create full square. 1 character per pixels gives only half width of square.\n          line += p ? white : black;\n        }\n\n        for (r = 0; r < cellSize; r += 1) {\n          ascii += line + '\\n';\n        }\n      }\n\n      return ascii.substring(0, ascii.length-1);\n    };\n\n    _this.renderTo2dContext = function(context, cellSize) {\n      cellSize = cellSize || 2;\n      var length = _this.getModuleCount();\n      for (var row = 0; row < length; row++) {\n        for (var col = 0; col < length; col++) {\n          context.fillStyle = _this.isDark(row, col) ? 'black' : 'white';\n          context.fillRect(row * cellSize, col * cellSize, cellSize, cellSize);\n        }\n      }\n    }\n\n    return _this;\n  };\n\n  //---------------------------------------------------------------------\n  // qrcode.stringToBytes\n  //---------------------------------------------------------------------\n\n  qrcode.stringToBytesFuncs = {\n    'default' : function(s) {\n      var bytes = [];\n      for (var i = 0; i < s.length; i += 1) {\n        var c = s.charCodeAt(i);\n        bytes.push(c & 0xff);\n      }\n      return bytes;\n    }\n  };\n\n  qrcode.stringToBytes = qrcode.stringToBytesFuncs['default'];\n\n  //---------------------------------------------------------------------\n  // qrcode.createStringToBytes\n  //---------------------------------------------------------------------\n\n  /**\n   * @param unicodeData base64 string of byte array.\n   * [16bit Unicode],[16bit Bytes], ...\n   * @param numChars\n   */\n  qrcode.createStringToBytes = function(unicodeData, numChars) {\n\n    // create conversion map.\n\n    var unicodeMap = function() {\n\n      var bin = base64DecodeInputStream(unicodeData);\n      var read = function() {\n        var b = bin.read();\n        if (b == -1) throw 'eof';\n        return b;\n      };\n\n      var count = 0;\n      var unicodeMap = {};\n      while (true) {\n        var b0 = bin.read();\n        if (b0 == -1) break;\n        var b1 = read();\n        var b2 = read();\n        var b3 = read();\n        var k = String.fromCharCode( (b0 << 8) | b1);\n        var v = (b2 << 8) | b3;\n        unicodeMap[k] = v;\n        count += 1;\n      }\n      if (count != numChars) {\n        throw count + ' != ' + numChars;\n      }\n\n      return unicodeMap;\n    }();\n\n    var unknownChar = '?'.charCodeAt(0);\n\n    return function(s) {\n      var bytes = [];\n      for (var i = 0; i < s.length; i += 1) {\n        var c = s.charCodeAt(i);\n        if (c < 128) {\n          bytes.push(c);\n        } else {\n          var b = unicodeMap[s.charAt(i)];\n          if (typeof b == 'number') {\n            if ( (b & 0xff) == b) {\n              // 1byte\n              bytes.push(b);\n            } else {\n              // 2bytes\n              bytes.push(b >>> 8);\n              bytes.push(b & 0xff);\n            }\n          } else {\n            bytes.push(unknownChar);\n          }\n        }\n      }\n      return bytes;\n    };\n  };\n\n  //---------------------------------------------------------------------\n  // QRMode\n  //---------------------------------------------------------------------\n\n  var QRMode = {\n    MODE_NUMBER :    1 << 0,\n    MODE_ALPHA_NUM : 1 << 1,\n    MODE_8BIT_BYTE : 1 << 2,\n    MODE_KANJI :     1 << 3\n  };\n\n  //---------------------------------------------------------------------\n  // QRErrorCorrectionLevel\n  //---------------------------------------------------------------------\n\n  var QRErrorCorrectionLevel = {\n    L : 1,\n    M : 0,\n    Q : 3,\n    H : 2\n  };\n\n  //---------------------------------------------------------------------\n  // QRMaskPattern\n  //---------------------------------------------------------------------\n\n  var QRMaskPattern = {\n    PATTERN000 : 0,\n    PATTERN001 : 1,\n    PATTERN010 : 2,\n    PATTERN011 : 3,\n    PATTERN100 : 4,\n    PATTERN101 : 5,\n    PATTERN110 : 6,\n    PATTERN111 : 7\n  };\n\n  //---------------------------------------------------------------------\n  // QRUtil\n  //---------------------------------------------------------------------\n\n  var QRUtil = function() {\n\n    var PATTERN_POSITION_TABLE = [\n      [],\n      [6, 18],\n      [6, 22],\n      [6, 26],\n      [6, 30],\n      [6, 34],\n      [6, 22, 38],\n      [6, 24, 42],\n      [6, 26, 46],\n      [6, 28, 50],\n      [6, 30, 54],\n      [6, 32, 58],\n      [6, 34, 62],\n      [6, 26, 46, 66],\n      [6, 26, 48, 70],\n      [6, 26, 50, 74],\n      [6, 30, 54, 78],\n      [6, 30, 56, 82],\n      [6, 30, 58, 86],\n      [6, 34, 62, 90],\n      [6, 28, 50, 72, 94],\n      [6, 26, 50, 74, 98],\n      [6, 30, 54, 78, 102],\n      [6, 28, 54, 80, 106],\n      [6, 32, 58, 84, 110],\n      [6, 30, 58, 86, 114],\n      [6, 34, 62, 90, 118],\n      [6, 26, 50, 74, 98, 122],\n      [6, 30, 54, 78, 102, 126],\n      [6, 26, 52, 78, 104, 130],\n      [6, 30, 56, 82, 108, 134],\n      [6, 34, 60, 86, 112, 138],\n      [6, 30, 58, 86, 114, 142],\n      [6, 34, 62, 90, 118, 146],\n      [6, 30, 54, 78, 102, 126, 150],\n      [6, 24, 50, 76, 102, 128, 154],\n      [6, 28, 54, 80, 106, 132, 158],\n      [6, 32, 58, 84, 110, 136, 162],\n      [6, 26, 54, 82, 110, 138, 166],\n      [6, 30, 58, 86, 114, 142, 170]\n    ];\n    var G15 = (1 << 10) | (1 << 8) | (1 << 5) | (1 << 4) | (1 << 2) | (1 << 1) | (1 << 0);\n    var G18 = (1 << 12) | (1 << 11) | (1 << 10) | (1 << 9) | (1 << 8) | (1 << 5) | (1 << 2) | (1 << 0);\n    var G15_MASK = (1 << 14) | (1 << 12) | (1 << 10) | (1 << 4) | (1 << 1);\n\n    var _this = {};\n\n    var getBCHDigit = function(data) {\n      var digit = 0;\n      while (data != 0) {\n        digit += 1;\n        data >>>= 1;\n      }\n      return digit;\n    };\n\n    _this.getBCHTypeInfo = function(data) {\n      var d = data << 10;\n      while (getBCHDigit(d) - getBCHDigit(G15) >= 0) {\n        d ^= (G15 << (getBCHDigit(d) - getBCHDigit(G15) ) );\n      }\n      return ( (data << 10) | d) ^ G15_MASK;\n    };\n\n    _this.getBCHTypeNumber = function(data) {\n      var d = data << 12;\n      while (getBCHDigit(d) - getBCHDigit(G18) >= 0) {\n        d ^= (G18 << (getBCHDigit(d) - getBCHDigit(G18) ) );\n      }\n      return (data << 12) | d;\n    };\n\n    _this.getPatternPosition = function(typeNumber) {\n      return PATTERN_POSITION_TABLE[typeNumber - 1];\n    };\n\n    _this.getMaskFunction = function(maskPattern) {\n\n      switch (maskPattern) {\n\n      case QRMaskPattern.PATTERN000 :\n        return function(i, j) { return (i + j) % 2 == 0; };\n      case QRMaskPattern.PATTERN001 :\n        return function(i, j) { return i % 2 == 0; };\n      case QRMaskPattern.PATTERN010 :\n        return function(i, j) { return j % 3 == 0; };\n      case QRMaskPattern.PATTERN011 :\n        return function(i, j) { return (i + j) % 3 == 0; };\n      case QRMaskPattern.PATTERN100 :\n        return function(i, j) { return (Math.floor(i / 2) + Math.floor(j / 3) ) % 2 == 0; };\n      case QRMaskPattern.PATTERN101 :\n        return function(i, j) { return (i * j) % 2 + (i * j) % 3 == 0; };\n      case QRMaskPattern.PATTERN110 :\n        return function(i, j) { return ( (i * j) % 2 + (i * j) % 3) % 2 == 0; };\n      case QRMaskPattern.PATTERN111 :\n        return function(i, j) { return ( (i * j) % 3 + (i + j) % 2) % 2 == 0; };\n\n      default :\n        throw 'bad maskPattern:' + maskPattern;\n      }\n    };\n\n    _this.getErrorCorrectPolynomial = function(errorCorrectLength) {\n      var a = qrPolynomial([1], 0);\n      for (var i = 0; i < errorCorrectLength; i += 1) {\n        a = a.multiply(qrPolynomial([1, QRMath.gexp(i)], 0) );\n      }\n      return a;\n    };\n\n    _this.getLengthInBits = function(mode, type) {\n\n      if (1 <= type && type < 10) {\n\n        // 1 - 9\n\n        switch(mode) {\n        case QRMode.MODE_NUMBER    : return 10;\n        case QRMode.MODE_ALPHA_NUM : return 9;\n        case QRMode.MODE_8BIT_BYTE : return 8;\n        case QRMode.MODE_KANJI     : return 8;\n        default :\n          throw 'mode:' + mode;\n        }\n\n      } else if (type < 27) {\n\n        // 10 - 26\n\n        switch(mode) {\n        case QRMode.MODE_NUMBER    : return 12;\n        case QRMode.MODE_ALPHA_NUM : return 11;\n        case QRMode.MODE_8BIT_BYTE : return 16;\n        case QRMode.MODE_KANJI     : return 10;\n        default :\n          throw 'mode:' + mode;\n        }\n\n      } else if (type < 41) {\n\n        // 27 - 40\n\n        switch(mode) {\n        case QRMode.MODE_NUMBER    : return 14;\n        case QRMode.MODE_ALPHA_NUM : return 13;\n        case QRMode.MODE_8BIT_BYTE : return 16;\n        case QRMode.MODE_KANJI     : return 12;\n        default :\n          throw 'mode:' + mode;\n        }\n\n      } else {\n        throw 'type:' + type;\n      }\n    };\n\n    _this.getLostPoint = function(qrcode) {\n\n      var moduleCount = qrcode.getModuleCount();\n\n      var lostPoint = 0;\n\n      // LEVEL1\n\n      for (var row = 0; row < moduleCount; row += 1) {\n        for (var col = 0; col < moduleCount; col += 1) {\n\n          var sameCount = 0;\n          var dark = qrcode.isDark(row, col);\n\n          for (var r = -1; r <= 1; r += 1) {\n\n            if (row + r < 0 || moduleCount <= row + r) {\n              continue;\n            }\n\n            for (var c = -1; c <= 1; c += 1) {\n\n              if (col + c < 0 || moduleCount <= col + c) {\n                continue;\n              }\n\n              if (r == 0 && c == 0) {\n                continue;\n              }\n\n              if (dark == qrcode.isDark(row + r, col + c) ) {\n                sameCount += 1;\n              }\n            }\n          }\n\n          if (sameCount > 5) {\n            lostPoint += (3 + sameCount - 5);\n          }\n        }\n      };\n\n      // LEVEL2\n\n      for (var row = 0; row < moduleCount - 1; row += 1) {\n        for (var col = 0; col < moduleCount - 1; col += 1) {\n          var count = 0;\n          if (qrcode.isDark(row, col) ) count += 1;\n          if (qrcode.isDark(row + 1, col) ) count += 1;\n          if (qrcode.isDark(row, col + 1) ) count += 1;\n          if (qrcode.isDark(row + 1, col + 1) ) count += 1;\n          if (count == 0 || count == 4) {\n            lostPoint += 3;\n          }\n        }\n      }\n\n      // LEVEL3\n\n      for (var row = 0; row < moduleCount; row += 1) {\n        for (var col = 0; col < moduleCount - 6; col += 1) {\n          if (qrcode.isDark(row, col)\n              && !qrcode.isDark(row, col + 1)\n              &&  qrcode.isDark(row, col + 2)\n              &&  qrcode.isDark(row, col + 3)\n              &&  qrcode.isDark(row, col + 4)\n              && !qrcode.isDark(row, col + 5)\n              &&  qrcode.isDark(row, col + 6) ) {\n            lostPoint += 40;\n          }\n        }\n      }\n\n      for (var col = 0; col < moduleCount; col += 1) {\n        for (var row = 0; row < moduleCount - 6; row += 1) {\n          if (qrcode.isDark(row, col)\n              && !qrcode.isDark(row + 1, col)\n              &&  qrcode.isDark(row + 2, col)\n              &&  qrcode.isDark(row + 3, col)\n              &&  qrcode.isDark(row + 4, col)\n              && !qrcode.isDark(row + 5, col)\n              &&  qrcode.isDark(row + 6, col) ) {\n            lostPoint += 40;\n          }\n        }\n      }\n\n      // LEVEL4\n\n      var darkCount = 0;\n\n      for (var col = 0; col < moduleCount; col += 1) {\n        for (var row = 0; row < moduleCount; row += 1) {\n          if (qrcode.isDark(row, col) ) {\n            darkCount += 1;\n          }\n        }\n      }\n\n      var ratio = Math.abs(100 * darkCount / moduleCount / moduleCount - 50) / 5;\n      lostPoint += ratio * 10;\n\n      return lostPoint;\n    };\n\n    return _this;\n  }();\n\n  //---------------------------------------------------------------------\n  // QRMath\n  //---------------------------------------------------------------------\n\n  var QRMath = function() {\n\n    var EXP_TABLE = new Array(256);\n    var LOG_TABLE = new Array(256);\n\n    // initialize tables\n    for (var i = 0; i < 8; i += 1) {\n      EXP_TABLE[i] = 1 << i;\n    }\n    for (var i = 8; i < 256; i += 1) {\n      EXP_TABLE[i] = EXP_TABLE[i - 4]\n        ^ EXP_TABLE[i - 5]\n        ^ EXP_TABLE[i - 6]\n        ^ EXP_TABLE[i - 8];\n    }\n    for (var i = 0; i < 255; i += 1) {\n      LOG_TABLE[EXP_TABLE[i] ] = i;\n    }\n\n    var _this = {};\n\n    _this.glog = function(n) {\n\n      if (n < 1) {\n        throw 'glog(' + n + ')';\n      }\n\n      return LOG_TABLE[n];\n    };\n\n    _this.gexp = function(n) {\n\n      while (n < 0) {\n        n += 255;\n      }\n\n      while (n >= 256) {\n        n -= 255;\n      }\n\n      return EXP_TABLE[n];\n    };\n\n    return _this;\n  }();\n\n  //---------------------------------------------------------------------\n  // qrPolynomial\n  //---------------------------------------------------------------------\n\n  function qrPolynomial(num, shift) {\n\n    if (typeof num.length == 'undefined') {\n      throw num.length + '/' + shift;\n    }\n\n    var _num = function() {\n      var offset = 0;\n      while (offset < num.length && num[offset] == 0) {\n        offset += 1;\n      }\n      var _num = new Array(num.length - offset + shift);\n      for (var i = 0; i < num.length - offset; i += 1) {\n        _num[i] = num[i + offset];\n      }\n      return _num;\n    }();\n\n    var _this = {};\n\n    _this.getAt = function(index) {\n      return _num[index];\n    };\n\n    _this.getLength = function() {\n      return _num.length;\n    };\n\n    _this.multiply = function(e) {\n\n      var num = new Array(_this.getLength() + e.getLength() - 1);\n\n      for (var i = 0; i < _this.getLength(); i += 1) {\n        for (var j = 0; j < e.getLength(); j += 1) {\n          num[i + j] ^= QRMath.gexp(QRMath.glog(_this.getAt(i) ) + QRMath.glog(e.getAt(j) ) );\n        }\n      }\n\n      return qrPolynomial(num, 0);\n    };\n\n    _this.mod = function(e) {\n\n      if (_this.getLength() - e.getLength() < 0) {\n        return _this;\n      }\n\n      var ratio = QRMath.glog(_this.getAt(0) ) - QRMath.glog(e.getAt(0) );\n\n      var num = new Array(_this.getLength() );\n      for (var i = 0; i < _this.getLength(); i += 1) {\n        num[i] = _this.getAt(i);\n      }\n\n      for (var i = 0; i < e.getLength(); i += 1) {\n        num[i] ^= QRMath.gexp(QRMath.glog(e.getAt(i) ) + ratio);\n      }\n\n      // recursive call\n      return qrPolynomial(num, 0).mod(e);\n    };\n\n    return _this;\n  };\n\n  //---------------------------------------------------------------------\n  // QRRSBlock\n  //---------------------------------------------------------------------\n\n  var QRRSBlock = function() {\n\n    var RS_BLOCK_TABLE = [\n\n      // L\n      // M\n      // Q\n      // H\n\n      // 1\n      [1, 26, 19],\n      [1, 26, 16],\n      [1, 26, 13],\n      [1, 26, 9],\n\n      // 2\n      [1, 44, 34],\n      [1, 44, 28],\n      [1, 44, 22],\n      [1, 44, 16],\n\n      // 3\n      [1, 70, 55],\n      [1, 70, 44],\n      [2, 35, 17],\n      [2, 35, 13],\n\n      // 4\n      [1, 100, 80],\n      [2, 50, 32],\n      [2, 50, 24],\n      [4, 25, 9],\n\n      // 5\n      [1, 134, 108],\n      [2, 67, 43],\n      [2, 33, 15, 2, 34, 16],\n      [2, 33, 11, 2, 34, 12],\n\n      // 6\n      [2, 86, 68],\n      [4, 43, 27],\n      [4, 43, 19],\n      [4, 43, 15],\n\n      // 7\n      [2, 98, 78],\n      [4, 49, 31],\n      [2, 32, 14, 4, 33, 15],\n      [4, 39, 13, 1, 40, 14],\n\n      // 8\n      [2, 121, 97],\n      [2, 60, 38, 2, 61, 39],\n      [4, 40, 18, 2, 41, 19],\n      [4, 40, 14, 2, 41, 15],\n\n      // 9\n      [2, 146, 116],\n      [3, 58, 36, 2, 59, 37],\n      [4, 36, 16, 4, 37, 17],\n      [4, 36, 12, 4, 37, 13],\n\n      // 10\n      [2, 86, 68, 2, 87, 69],\n      [4, 69, 43, 1, 70, 44],\n      [6, 43, 19, 2, 44, 20],\n      [6, 43, 15, 2, 44, 16],\n\n      // 11\n      [4, 101, 81],\n      [1, 80, 50, 4, 81, 51],\n      [4, 50, 22, 4, 51, 23],\n      [3, 36, 12, 8, 37, 13],\n\n      // 12\n      [2, 116, 92, 2, 117, 93],\n      [6, 58, 36, 2, 59, 37],\n      [4, 46, 20, 6, 47, 21],\n      [7, 42, 14, 4, 43, 15],\n\n      // 13\n      [4, 133, 107],\n      [8, 59, 37, 1, 60, 38],\n      [8, 44, 20, 4, 45, 21],\n      [12, 33, 11, 4, 34, 12],\n\n      // 14\n      [3, 145, 115, 1, 146, 116],\n      [4, 64, 40, 5, 65, 41],\n      [11, 36, 16, 5, 37, 17],\n      [11, 36, 12, 5, 37, 13],\n\n      // 15\n      [5, 109, 87, 1, 110, 88],\n      [5, 65, 41, 5, 66, 42],\n      [5, 54, 24, 7, 55, 25],\n      [11, 36, 12, 7, 37, 13],\n\n      // 16\n      [5, 122, 98, 1, 123, 99],\n      [7, 73, 45, 3, 74, 46],\n      [15, 43, 19, 2, 44, 20],\n      [3, 45, 15, 13, 46, 16],\n\n      // 17\n      [1, 135, 107, 5, 136, 108],\n      [10, 74, 46, 1, 75, 47],\n      [1, 50, 22, 15, 51, 23],\n      [2, 42, 14, 17, 43, 15],\n\n      // 18\n      [5, 150, 120, 1, 151, 121],\n      [9, 69, 43, 4, 70, 44],\n      [17, 50, 22, 1, 51, 23],\n      [2, 42, 14, 19, 43, 15],\n\n      // 19\n      [3, 141, 113, 4, 142, 114],\n      [3, 70, 44, 11, 71, 45],\n      [17, 47, 21, 4, 48, 22],\n      [9, 39, 13, 16, 40, 14],\n\n      // 20\n      [3, 135, 107, 5, 136, 108],\n      [3, 67, 41, 13, 68, 42],\n      [15, 54, 24, 5, 55, 25],\n      [15, 43, 15, 10, 44, 16],\n\n      // 21\n      [4, 144, 116, 4, 145, 117],\n      [17, 68, 42],\n      [17, 50, 22, 6, 51, 23],\n      [19, 46, 16, 6, 47, 17],\n\n      // 22\n      [2, 139, 111, 7, 140, 112],\n      [17, 74, 46],\n      [7, 54, 24, 16, 55, 25],\n      [34, 37, 13],\n\n      // 23\n      [4, 151, 121, 5, 152, 122],\n      [4, 75, 47, 14, 76, 48],\n      [11, 54, 24, 14, 55, 25],\n      [16, 45, 15, 14, 46, 16],\n\n      // 24\n      [6, 147, 117, 4, 148, 118],\n      [6, 73, 45, 14, 74, 46],\n      [11, 54, 24, 16, 55, 25],\n      [30, 46, 16, 2, 47, 17],\n\n      // 25\n      [8, 132, 106, 4, 133, 107],\n      [8, 75, 47, 13, 76, 48],\n      [7, 54, 24, 22, 55, 25],\n      [22, 45, 15, 13, 46, 16],\n\n      // 26\n      [10, 142, 114, 2, 143, 115],\n      [19, 74, 46, 4, 75, 47],\n      [28, 50, 22, 6, 51, 23],\n      [33, 46, 16, 4, 47, 17],\n\n      // 27\n      [8, 152, 122, 4, 153, 123],\n      [22, 73, 45, 3, 74, 46],\n      [8, 53, 23, 26, 54, 24],\n      [12, 45, 15, 28, 46, 16],\n\n      // 28\n      [3, 147, 117, 10, 148, 118],\n      [3, 73, 45, 23, 74, 46],\n      [4, 54, 24, 31, 55, 25],\n      [11, 45, 15, 31, 46, 16],\n\n      // 29\n      [7, 146, 116, 7, 147, 117],\n      [21, 73, 45, 7, 74, 46],\n      [1, 53, 23, 37, 54, 24],\n      [19, 45, 15, 26, 46, 16],\n\n      // 30\n      [5, 145, 115, 10, 146, 116],\n      [19, 75, 47, 10, 76, 48],\n      [15, 54, 24, 25, 55, 25],\n      [23, 45, 15, 25, 46, 16],\n\n      // 31\n      [13, 145, 115, 3, 146, 116],\n      [2, 74, 46, 29, 75, 47],\n      [42, 54, 24, 1, 55, 25],\n      [23, 45, 15, 28, 46, 16],\n\n      // 32\n      [17, 145, 115],\n      [10, 74, 46, 23, 75, 47],\n      [10, 54, 24, 35, 55, 25],\n      [19, 45, 15, 35, 46, 16],\n\n      // 33\n      [17, 145, 115, 1, 146, 116],\n      [14, 74, 46, 21, 75, 47],\n      [29, 54, 24, 19, 55, 25],\n      [11, 45, 15, 46, 46, 16],\n\n      // 34\n      [13, 145, 115, 6, 146, 116],\n      [14, 74, 46, 23, 75, 47],\n      [44, 54, 24, 7, 55, 25],\n      [59, 46, 16, 1, 47, 17],\n\n      // 35\n      [12, 151, 121, 7, 152, 122],\n      [12, 75, 47, 26, 76, 48],\n      [39, 54, 24, 14, 55, 25],\n      [22, 45, 15, 41, 46, 16],\n\n      // 36\n      [6, 151, 121, 14, 152, 122],\n      [6, 75, 47, 34, 76, 48],\n      [46, 54, 24, 10, 55, 25],\n      [2, 45, 15, 64, 46, 16],\n\n      // 37\n      [17, 152, 122, 4, 153, 123],\n      [29, 74, 46, 14, 75, 47],\n      [49, 54, 24, 10, 55, 25],\n      [24, 45, 15, 46, 46, 16],\n\n      // 38\n      [4, 152, 122, 18, 153, 123],\n      [13, 74, 46, 32, 75, 47],\n      [48, 54, 24, 14, 55, 25],\n      [42, 45, 15, 32, 46, 16],\n\n      // 39\n      [20, 147, 117, 4, 148, 118],\n      [40, 75, 47, 7, 76, 48],\n      [43, 54, 24, 22, 55, 25],\n      [10, 45, 15, 67, 46, 16],\n\n      // 40\n      [19, 148, 118, 6, 149, 119],\n      [18, 75, 47, 31, 76, 48],\n      [34, 54, 24, 34, 55, 25],\n      [20, 45, 15, 61, 46, 16]\n    ];\n\n    var qrRSBlock = function(totalCount, dataCount) {\n      var _this = {};\n      _this.totalCount = totalCount;\n      _this.dataCount = dataCount;\n      return _this;\n    };\n\n    var _this = {};\n\n    var getRsBlockTable = function(typeNumber, errorCorrectionLevel) {\n\n      switch(errorCorrectionLevel) {\n      case QRErrorCorrectionLevel.L :\n        return RS_BLOCK_TABLE[(typeNumber - 1) * 4 + 0];\n      case QRErrorCorrectionLevel.M :\n        return RS_BLOCK_TABLE[(typeNumber - 1) * 4 + 1];\n      case QRErrorCorrectionLevel.Q :\n        return RS_BLOCK_TABLE[(typeNumber - 1) * 4 + 2];\n      case QRErrorCorrectionLevel.H :\n        return RS_BLOCK_TABLE[(typeNumber - 1) * 4 + 3];\n      default :\n        return undefined;\n      }\n    };\n\n    _this.getRSBlocks = function(typeNumber, errorCorrectionLevel) {\n\n      var rsBlock = getRsBlockTable(typeNumber, errorCorrectionLevel);\n\n      if (typeof rsBlock == 'undefined') {\n        throw 'bad rs block @ typeNumber:' + typeNumber +\n            '/errorCorrectionLevel:' + errorCorrectionLevel;\n      }\n\n      var length = rsBlock.length / 3;\n\n      var list = [];\n\n      for (var i = 0; i < length; i += 1) {\n\n        var count = rsBlock[i * 3 + 0];\n        var totalCount = rsBlock[i * 3 + 1];\n        var dataCount = rsBlock[i * 3 + 2];\n\n        for (var j = 0; j < count; j += 1) {\n          list.push(qrRSBlock(totalCount, dataCount) );\n        }\n      }\n\n      return list;\n    };\n\n    return _this;\n  }();\n\n  //---------------------------------------------------------------------\n  // qrBitBuffer\n  //---------------------------------------------------------------------\n\n  var qrBitBuffer = function() {\n\n    var _buffer = [];\n    var _length = 0;\n\n    var _this = {};\n\n    _this.getBuffer = function() {\n      return _buffer;\n    };\n\n    _this.getAt = function(index) {\n      var bufIndex = Math.floor(index / 8);\n      return ( (_buffer[bufIndex] >>> (7 - index % 8) ) & 1) == 1;\n    };\n\n    _this.put = function(num, length) {\n      for (var i = 0; i < length; i += 1) {\n        _this.putBit( ( (num >>> (length - i - 1) ) & 1) == 1);\n      }\n    };\n\n    _this.getLengthInBits = function() {\n      return _length;\n    };\n\n    _this.putBit = function(bit) {\n\n      var bufIndex = Math.floor(_length / 8);\n      if (_buffer.length <= bufIndex) {\n        _buffer.push(0);\n      }\n\n      if (bit) {\n        _buffer[bufIndex] |= (0x80 >>> (_length % 8) );\n      }\n\n      _length += 1;\n    };\n\n    return _this;\n  };\n\n  //---------------------------------------------------------------------\n  // qrNumber\n  //---------------------------------------------------------------------\n\n  var qrNumber = function(data) {\n\n    var _mode = QRMode.MODE_NUMBER;\n    var _data = data;\n\n    var _this = {};\n\n    _this.getMode = function() {\n      return _mode;\n    };\n\n    _this.getLength = function(buffer) {\n      return _data.length;\n    };\n\n    _this.write = function(buffer) {\n\n      var data = _data;\n\n      var i = 0;\n\n      while (i + 2 < data.length) {\n        buffer.put(strToNum(data.substring(i, i + 3) ), 10);\n        i += 3;\n      }\n\n      if (i < data.length) {\n        if (data.length - i == 1) {\n          buffer.put(strToNum(data.substring(i, i + 1) ), 4);\n        } else if (data.length - i == 2) {\n          buffer.put(strToNum(data.substring(i, i + 2) ), 7);\n        }\n      }\n    };\n\n    var strToNum = function(s) {\n      var num = 0;\n      for (var i = 0; i < s.length; i += 1) {\n        num = num * 10 + chatToNum(s.charAt(i) );\n      }\n      return num;\n    };\n\n    var chatToNum = function(c) {\n      if ('0' <= c && c <= '9') {\n        return c.charCodeAt(0) - '0'.charCodeAt(0);\n      }\n      throw 'illegal char :' + c;\n    };\n\n    return _this;\n  };\n\n  //---------------------------------------------------------------------\n  // qrAlphaNum\n  //---------------------------------------------------------------------\n\n  var qrAlphaNum = function(data) {\n\n    var _mode = QRMode.MODE_ALPHA_NUM;\n    var _data = data;\n\n    var _this = {};\n\n    _this.getMode = function() {\n      return _mode;\n    };\n\n    _this.getLength = function(buffer) {\n      return _data.length;\n    };\n\n    _this.write = function(buffer) {\n\n      var s = _data;\n\n      var i = 0;\n\n      while (i + 1 < s.length) {\n        buffer.put(\n          getCode(s.charAt(i) ) * 45 +\n          getCode(s.charAt(i + 1) ), 11);\n        i += 2;\n      }\n\n      if (i < s.length) {\n        buffer.put(getCode(s.charAt(i) ), 6);\n      }\n    };\n\n    var getCode = function(c) {\n\n      if ('0' <= c && c <= '9') {\n        return c.charCodeAt(0) - '0'.charCodeAt(0);\n      } else if ('A' <= c && c <= 'Z') {\n        return c.charCodeAt(0) - 'A'.charCodeAt(0) + 10;\n      } else {\n        switch (c) {\n        case ' ' : return 36;\n        case '$' : return 37;\n        case '%' : return 38;\n        case '*' : return 39;\n        case '+' : return 40;\n        case '-' : return 41;\n        case '.' : return 42;\n        case '/' : return 43;\n        case ':' : return 44;\n        default :\n          throw 'illegal char :' + c;\n        }\n      }\n    };\n\n    return _this;\n  };\n\n  //---------------------------------------------------------------------\n  // qr8BitByte\n  //---------------------------------------------------------------------\n\n  var qr8BitByte = function(data) {\n\n    var _mode = QRMode.MODE_8BIT_BYTE;\n    var _data = data;\n    var _bytes = qrcode.stringToBytes(data);\n\n    var _this = {};\n\n    _this.getMode = function() {\n      return _mode;\n    };\n\n    _this.getLength = function(buffer) {\n      return _bytes.length;\n    };\n\n    _this.write = function(buffer) {\n      for (var i = 0; i < _bytes.length; i += 1) {\n        buffer.put(_bytes[i], 8);\n      }\n    };\n\n    return _this;\n  };\n\n  //---------------------------------------------------------------------\n  // qrKanji\n  //---------------------------------------------------------------------\n\n  var qrKanji = function(data) {\n\n    var _mode = QRMode.MODE_KANJI;\n    var _data = data;\n\n    var stringToBytes = qrcode.stringToBytesFuncs['SJIS'];\n    if (!stringToBytes) {\n      throw 'sjis not supported.';\n    }\n    !function(c, code) {\n      // self test for sjis support.\n      var test = stringToBytes(c);\n      if (test.length != 2 || ( (test[0] << 8) | test[1]) != code) {\n        throw 'sjis not supported.';\n      }\n    }('\\u53cb', 0x9746);\n\n    var _bytes = stringToBytes(data);\n\n    var _this = {};\n\n    _this.getMode = function() {\n      return _mode;\n    };\n\n    _this.getLength = function(buffer) {\n      return ~~(_bytes.length / 2);\n    };\n\n    _this.write = function(buffer) {\n\n      var data = _bytes;\n\n      var i = 0;\n\n      while (i + 1 < data.length) {\n\n        var c = ( (0xff & data[i]) << 8) | (0xff & data[i + 1]);\n\n        if (0x8140 <= c && c <= 0x9FFC) {\n          c -= 0x8140;\n        } else if (0xE040 <= c && c <= 0xEBBF) {\n          c -= 0xC140;\n        } else {\n          throw 'illegal char at ' + (i + 1) + '/' + c;\n        }\n\n        c = ( (c >>> 8) & 0xff) * 0xC0 + (c & 0xff);\n\n        buffer.put(c, 13);\n\n        i += 2;\n      }\n\n      if (i < data.length) {\n        throw 'illegal char at ' + (i + 1);\n      }\n    };\n\n    return _this;\n  };\n\n  //=====================================================================\n  // GIF Support etc.\n  //\n\n  //---------------------------------------------------------------------\n  // byteArrayOutputStream\n  //---------------------------------------------------------------------\n\n  var byteArrayOutputStream = function() {\n\n    var _bytes = [];\n\n    var _this = {};\n\n    _this.writeByte = function(b) {\n      _bytes.push(b & 0xff);\n    };\n\n    _this.writeShort = function(i) {\n      _this.writeByte(i);\n      _this.writeByte(i >>> 8);\n    };\n\n    _this.writeBytes = function(b, off, len) {\n      off = off || 0;\n      len = len || b.length;\n      for (var i = 0; i < len; i += 1) {\n        _this.writeByte(b[i + off]);\n      }\n    };\n\n    _this.writeString = function(s) {\n      for (var i = 0; i < s.length; i += 1) {\n        _this.writeByte(s.charCodeAt(i) );\n      }\n    };\n\n    _this.toByteArray = function() {\n      return _bytes;\n    };\n\n    _this.toString = function() {\n      var s = '';\n      s += '[';\n      for (var i = 0; i < _bytes.length; i += 1) {\n        if (i > 0) {\n          s += ',';\n        }\n        s += _bytes[i];\n      }\n      s += ']';\n      return s;\n    };\n\n    return _this;\n  };\n\n  //---------------------------------------------------------------------\n  // base64EncodeOutputStream\n  //---------------------------------------------------------------------\n\n  var base64EncodeOutputStream = function() {\n\n    var _buffer = 0;\n    var _buflen = 0;\n    var _length = 0;\n    var _base64 = '';\n\n    var _this = {};\n\n    var writeEncoded = function(b) {\n      _base64 += String.fromCharCode(encode(b & 0x3f) );\n    };\n\n    var encode = function(n) {\n      if (n < 0) {\n        // error.\n      } else if (n < 26) {\n        return 0x41 + n;\n      } else if (n < 52) {\n        return 0x61 + (n - 26);\n      } else if (n < 62) {\n        return 0x30 + (n - 52);\n      } else if (n == 62) {\n        return 0x2b;\n      } else if (n == 63) {\n        return 0x2f;\n      }\n      throw 'n:' + n;\n    };\n\n    _this.writeByte = function(n) {\n\n      _buffer = (_buffer << 8) | (n & 0xff);\n      _buflen += 8;\n      _length += 1;\n\n      while (_buflen >= 6) {\n        writeEncoded(_buffer >>> (_buflen - 6) );\n        _buflen -= 6;\n      }\n    };\n\n    _this.flush = function() {\n\n      if (_buflen > 0) {\n        writeEncoded(_buffer << (6 - _buflen) );\n        _buffer = 0;\n        _buflen = 0;\n      }\n\n      if (_length % 3 != 0) {\n        // padding\n        var padlen = 3 - _length % 3;\n        for (var i = 0; i < padlen; i += 1) {\n          _base64 += '=';\n        }\n      }\n    };\n\n    _this.toString = function() {\n      return _base64;\n    };\n\n    return _this;\n  };\n\n  //---------------------------------------------------------------------\n  // base64DecodeInputStream\n  //---------------------------------------------------------------------\n\n  var base64DecodeInputStream = function(str) {\n\n    var _str = str;\n    var _pos = 0;\n    var _buffer = 0;\n    var _buflen = 0;\n\n    var _this = {};\n\n    _this.read = function() {\n\n      while (_buflen < 8) {\n\n        if (_pos >= _str.length) {\n          if (_buflen == 0) {\n            return -1;\n          }\n          throw 'unexpected end of file./' + _buflen;\n        }\n\n        var c = _str.charAt(_pos);\n        _pos += 1;\n\n        if (c == '=') {\n          _buflen = 0;\n          return -1;\n        } else if (c.match(/^\\s$/) ) {\n          // ignore if whitespace.\n          continue;\n        }\n\n        _buffer = (_buffer << 6) | decode(c.charCodeAt(0) );\n        _buflen += 6;\n      }\n\n      var n = (_buffer >>> (_buflen - 8) ) & 0xff;\n      _buflen -= 8;\n      return n;\n    };\n\n    var decode = function(c) {\n      if (0x41 <= c && c <= 0x5a) {\n        return c - 0x41;\n      } else if (0x61 <= c && c <= 0x7a) {\n        return c - 0x61 + 26;\n      } else if (0x30 <= c && c <= 0x39) {\n        return c - 0x30 + 52;\n      } else if (c == 0x2b) {\n        return 62;\n      } else if (c == 0x2f) {\n        return 63;\n      } else {\n        throw 'c:' + c;\n      }\n    };\n\n    return _this;\n  };\n\n  //---------------------------------------------------------------------\n  // gifImage (B/W)\n  //---------------------------------------------------------------------\n\n  var gifImage = function(width, height) {\n\n    var _width = width;\n    var _height = height;\n    var _data = new Array(width * height);\n\n    var _this = {};\n\n    _this.setPixel = function(x, y, pixel) {\n      _data[y * _width + x] = pixel;\n    };\n\n    _this.write = function(out) {\n\n      //---------------------------------\n      // GIF Signature\n\n      out.writeString('GIF87a');\n\n      //---------------------------------\n      // Screen Descriptor\n\n      out.writeShort(_width);\n      out.writeShort(_height);\n\n      out.writeByte(0x80); // 2bit\n      out.writeByte(0);\n      out.writeByte(0);\n\n      //---------------------------------\n      // Global Color Map\n\n      // black\n      out.writeByte(0x00);\n      out.writeByte(0x00);\n      out.writeByte(0x00);\n\n      // white\n      out.writeByte(0xff);\n      out.writeByte(0xff);\n      out.writeByte(0xff);\n\n      //---------------------------------\n      // Image Descriptor\n\n      out.writeString(',');\n      out.writeShort(0);\n      out.writeShort(0);\n      out.writeShort(_width);\n      out.writeShort(_height);\n      out.writeByte(0);\n\n      //---------------------------------\n      // Local Color Map\n\n      //---------------------------------\n      // Raster Data\n\n      var lzwMinCodeSize = 2;\n      var raster = getLZWRaster(lzwMinCodeSize);\n\n      out.writeByte(lzwMinCodeSize);\n\n      var offset = 0;\n\n      while (raster.length - offset > 255) {\n        out.writeByte(255);\n        out.writeBytes(raster, offset, 255);\n        offset += 255;\n      }\n\n      out.writeByte(raster.length - offset);\n      out.writeBytes(raster, offset, raster.length - offset);\n      out.writeByte(0x00);\n\n      //---------------------------------\n      // GIF Terminator\n      out.writeString(';');\n    };\n\n    var bitOutputStream = function(out) {\n\n      var _out = out;\n      var _bitLength = 0;\n      var _bitBuffer = 0;\n\n      var _this = {};\n\n      _this.write = function(data, length) {\n\n        if ( (data >>> length) != 0) {\n          throw 'length over';\n        }\n\n        while (_bitLength + length >= 8) {\n          _out.writeByte(0xff & ( (data << _bitLength) | _bitBuffer) );\n          length -= (8 - _bitLength);\n          data >>>= (8 - _bitLength);\n          _bitBuffer = 0;\n          _bitLength = 0;\n        }\n\n        _bitBuffer = (data << _bitLength) | _bitBuffer;\n        _bitLength = _bitLength + length;\n      };\n\n      _this.flush = function() {\n        if (_bitLength > 0) {\n          _out.writeByte(_bitBuffer);\n        }\n      };\n\n      return _this;\n    };\n\n    var getLZWRaster = function(lzwMinCodeSize) {\n\n      var clearCode = 1 << lzwMinCodeSize;\n      var endCode = (1 << lzwMinCodeSize) + 1;\n      var bitLength = lzwMinCodeSize + 1;\n\n      // Setup LZWTable\n      var table = lzwTable();\n\n      for (var i = 0; i < clearCode; i += 1) {\n        table.add(String.fromCharCode(i) );\n      }\n      table.add(String.fromCharCode(clearCode) );\n      table.add(String.fromCharCode(endCode) );\n\n      var byteOut = byteArrayOutputStream();\n      var bitOut = bitOutputStream(byteOut);\n\n      // clear code\n      bitOut.write(clearCode, bitLength);\n\n      var dataIndex = 0;\n\n      var s = String.fromCharCode(_data[dataIndex]);\n      dataIndex += 1;\n\n      while (dataIndex < _data.length) {\n\n        var c = String.fromCharCode(_data[dataIndex]);\n        dataIndex += 1;\n\n        if (table.contains(s + c) ) {\n\n          s = s + c;\n\n        } else {\n\n          bitOut.write(table.indexOf(s), bitLength);\n\n          if (table.size() < 0xfff) {\n\n            if (table.size() == (1 << bitLength) ) {\n              bitLength += 1;\n            }\n\n            table.add(s + c);\n          }\n\n          s = c;\n        }\n      }\n\n      bitOut.write(table.indexOf(s), bitLength);\n\n      // end code\n      bitOut.write(endCode, bitLength);\n\n      bitOut.flush();\n\n      return byteOut.toByteArray();\n    };\n\n    var lzwTable = function() {\n\n      var _map = {};\n      var _size = 0;\n\n      var _this = {};\n\n      _this.add = function(key) {\n        if (_this.contains(key) ) {\n          throw 'dup key:' + key;\n        }\n        _map[key] = _size;\n        _size += 1;\n      };\n\n      _this.size = function() {\n        return _size;\n      };\n\n      _this.indexOf = function(key) {\n        return _map[key];\n      };\n\n      _this.contains = function(key) {\n        return typeof _map[key] != 'undefined';\n      };\n\n      return _this;\n    };\n\n    return _this;\n  };\n\n  var createDataURL = function(width, height, getPixel) {\n    var gif = gifImage(width, height);\n    for (var y = 0; y < height; y += 1) {\n      for (var x = 0; x < width; x += 1) {\n        gif.setPixel(x, y, getPixel(x, y) );\n      }\n    }\n\n    var b = byteArrayOutputStream();\n    gif.write(b);\n\n    var base64 = base64EncodeOutputStream();\n    var bytes = b.toByteArray();\n    for (var i = 0; i < bytes.length; i += 1) {\n      base64.writeByte(bytes[i]);\n    }\n    base64.flush();\n\n    return 'data:image/gif;base64,' + base64;\n  };\n\n  //---------------------------------------------------------------------\n  // returns qrcode function.\n\n  return qrcode;\n}();\n\n// multibyte support\n!function() {\n\n  qrcode.stringToBytesFuncs['UTF-8'] = function(s) {\n    // http://stackoverflow.com/questions/18729405/how-to-convert-utf8-string-to-byte-array\n    function toUTF8Array(str) {\n      var utf8 = [];\n      for (var i=0; i < str.length; i++) {\n        var charcode = str.charCodeAt(i);\n        if (charcode < 0x80) utf8.push(charcode);\n        else if (charcode < 0x800) {\n          utf8.push(0xc0 | (charcode >> 6),\n              0x80 | (charcode & 0x3f));\n        }\n        else if (charcode < 0xd800 || charcode >= 0xe000) {\n          utf8.push(0xe0 | (charcode >> 12),\n              0x80 | ((charcode>>6) & 0x3f),\n              0x80 | (charcode & 0x3f));\n        }\n        // surrogate pair\n        else {\n          i++;\n          // UTF-16 encodes 0x10000-0x10FFFF by\n          // subtracting 0x10000 and splitting the\n          // 20 bits of 0x0-0xFFFFF into two halves\n          charcode = 0x10000 + (((charcode & 0x3ff)<<10)\n            | (str.charCodeAt(i) & 0x3ff));\n          utf8.push(0xf0 | (charcode >>18),\n              0x80 | ((charcode>>12) & 0x3f),\n              0x80 | ((charcode>>6) & 0x3f),\n              0x80 | (charcode & 0x3f));\n        }\n      }\n      return utf8;\n    }\n    return toUTF8Array(s);\n  };\n\n}();\n\n(function (factory) {\n  if (typeof define === 'function' && define.amd) {\n      define([], factory);\n  } else if (typeof exports === 'object') {\n      module.exports = factory();\n  }\n}(function () {\n    return qrcode;\n}));\n", "import { UnknownObject } from \"../types\";\n\nconst isObject = (obj: Record<string, unknown>): boolean => !!obj && typeof obj === \"object\" && !Array.isArray(obj);\n\nexport default function mergeDeep(target: UnknownObject, ...sources: UnknownObject[]): UnknownObject {\n  if (!sources.length) return target;\n  const source = sources.shift();\n  if (source === undefined || !isObject(target) || !isObject(source)) return target;\n  target = { ...target };\n  Object.keys(source).forEach((key: string): void => {\n    const targetValue = target[key];\n    const sourceValue = source[key];\n\n    if (Array.isArray(targetValue) && Array.isArray(sourceValue)) {\n      target[key] = sourceValue;\n    } else if (isObject(targetValue) && isObject(sourceValue)) {\n      target[key] = mergeDeep(Object.assign({}, targetValue), sourceValue);\n    } else {\n      target[key] = sourceValue;\n    }\n  });\n\n  return mergeDeep(target, ...sources);\n}\n", "export default function downloadURI(uri: string, name: string): void {\n  const link = document.createElement(\"a\");\n  link.download = name;\n  link.href = uri;\n  document.body.appendChild(link);\n  link.click();\n  document.body.removeChild(link);\n}\n", "export default async function toDataURL(url: string): Promise<string> {\n  return new Promise((resolve) => {\n    const xhr = new XMLHttpRequest();\n    xhr.onload = function () {\n      const reader = new FileReader();\n      reader.onloadend = function () {\n        resolve(reader.result as string);\n      };\n      reader.readAsDataURL(xhr.response);\n    };\n    xhr.open(\"GET\", url);\n    xhr.responseType = \"blob\";\n    xhr.send();\n  });\n}\n", "interface ErrorCorrectionPercents {\n  [key: string]: number;\n}\n\nexport default {\n  L: 0.07,\n  M: 0.15,\n  Q: 0.25,\n  H: 0.3\n} as ErrorCorrectionPercents;\n", "import dotTypes from \"../../constants/dotTypes\";\nimport { DotType, GetNeighbor, DrawArgs, BasicFigureDrawArgs, RotateFigureArgs } from \"../../types\";\n\nexport default class QRDot {\n  _element?: SVGElement;\n  _svg: SVGElement;\n  _type: DotType;\n\n  constructor({ svg, type }: { svg: SVGElement; type: DotType }) {\n    this._svg = svg;\n    this._type = type;\n  }\n\n  draw(x: number, y: number, size: number, getNeighbor: GetNeighbor): void {\n    const type = this._type;\n    let drawFunction;\n\n    switch (type) {\n      case dotTypes.dots:\n        drawFunction = this._drawDot;\n        break;\n      case dotTypes.classy:\n        drawFunction = this._drawClassy;\n        break;\n      case dotTypes.classyRounded:\n        drawFunction = this._drawClassyRounded;\n        break;\n      case dotTypes.rounded:\n        drawFunction = this._drawRounded;\n        break;\n      case dotTypes.extraRounded:\n        drawFunction = this._drawExtraRounded;\n        break;\n      case dotTypes.square:\n      default:\n        drawFunction = this._drawSquare;\n    }\n\n    drawFunction.call(this, { x, y, size, getNeighbor });\n  }\n\n  _rotateFigure({ x, y, size, rotation = 0, draw }: RotateFigureArgs): void {\n    const cx = x + size / 2;\n    const cy = y + size / 2;\n\n    draw();\n    this._element?.setAttribute(\"transform\", `rotate(${(180 * rotation) / Math.PI},${cx},${cy})`);\n  }\n\n  _basicDot(args: BasicFigureDrawArgs): void {\n    const { size, x, y } = args;\n\n    this._rotateFigure({\n      ...args,\n      draw: () => {\n        this._element = document.createElementNS(\"http://www.w3.org/2000/svg\", \"circle\");\n        this._element.setAttribute(\"cx\", String(x + size / 2));\n        this._element.setAttribute(\"cy\", String(y + size / 2));\n        this._element.setAttribute(\"r\", String(size / 2));\n      }\n    });\n  }\n\n  _basicSquare(args: BasicFigureDrawArgs): void {\n    const { size, x, y } = args;\n\n    this._rotateFigure({\n      ...args,\n      draw: () => {\n        this._element = document.createElementNS(\"http://www.w3.org/2000/svg\", \"rect\");\n        this._element.setAttribute(\"x\", String(x));\n        this._element.setAttribute(\"y\", String(y));\n        this._element.setAttribute(\"width\", String(size));\n        this._element.setAttribute(\"height\", String(size));\n      }\n    });\n  }\n\n  //if rotation === 0 - right side is rounded\n  _basicSideRounded(args: BasicFigureDrawArgs): void {\n    const { size, x, y } = args;\n\n    this._rotateFigure({\n      ...args,\n      draw: () => {\n        this._element = document.createElementNS(\"http://www.w3.org/2000/svg\", \"path\");\n        this._element.setAttribute(\n          \"d\",\n          `M ${x} ${y}` + //go to top left position\n            `v ${size}` + //draw line to left bottom corner\n            `h ${size / 2}` + //draw line to left bottom corner + half of size right\n            `a ${size / 2} ${size / 2}, 0, 0, 0, 0 ${-size}` // draw rounded corner\n        );\n      }\n    });\n  }\n\n  //if rotation === 0 - top right corner is rounded\n  _basicCornerRounded(args: BasicFigureDrawArgs): void {\n    const { size, x, y } = args;\n\n    this._rotateFigure({\n      ...args,\n      draw: () => {\n        this._element = document.createElementNS(\"http://www.w3.org/2000/svg\", \"path\");\n        this._element.setAttribute(\n          \"d\",\n          `M ${x} ${y}` + //go to top left position\n            `v ${size}` + //draw line to left bottom corner\n            `h ${size}` + //draw line to right bottom corner\n            `v ${-size / 2}` + //draw line to right bottom corner + half of size top\n            `a ${size / 2} ${size / 2}, 0, 0, 0, ${-size / 2} ${-size / 2}` // draw rounded corner\n        );\n      }\n    });\n  }\n\n  //if rotation === 0 - top right corner is rounded\n  _basicCornerExtraRounded(args: BasicFigureDrawArgs): void {\n    const { size, x, y } = args;\n\n    this._rotateFigure({\n      ...args,\n      draw: () => {\n        this._element = document.createElementNS(\"http://www.w3.org/2000/svg\", \"path\");\n        this._element.setAttribute(\n          \"d\",\n          `M ${x} ${y}` + //go to top left position\n            `v ${size}` + //draw line to left bottom corner\n            `h ${size}` + //draw line to right bottom corner\n            `a ${size} ${size}, 0, 0, 0, ${-size} ${-size}` // draw rounded top right corner\n        );\n      }\n    });\n  }\n\n  //if rotation === 0 - left bottom and right top corners are rounded\n  _basicCornersRounded(args: BasicFigureDrawArgs): void {\n    const { size, x, y } = args;\n\n    this._rotateFigure({\n      ...args,\n      draw: () => {\n        this._element = document.createElementNS(\"http://www.w3.org/2000/svg\", \"path\");\n        this._element.setAttribute(\n          \"d\",\n          `M ${x} ${y}` + //go to left top position\n            `v ${size / 2}` + //draw line to left top corner + half of size bottom\n            `a ${size / 2} ${size / 2}, 0, 0, 0, ${size / 2} ${size / 2}` + // draw rounded left bottom corner\n            `h ${size / 2}` + //draw line to right bottom corner\n            `v ${-size / 2}` + //draw line to right bottom corner + half of size top\n            `a ${size / 2} ${size / 2}, 0, 0, 0, ${-size / 2} ${-size / 2}` // draw rounded right top corner\n        );\n      }\n    });\n  }\n\n  _drawDot({ x, y, size }: DrawArgs): void {\n    this._basicDot({ x, y, size, rotation: 0 });\n  }\n\n  _drawSquare({ x, y, size }: DrawArgs): void {\n    this._basicSquare({ x, y, size, rotation: 0 });\n  }\n\n  _drawRounded({ x, y, size, getNeighbor }: DrawArgs): void {\n    const leftNeighbor = getNeighbor ? +getNeighbor(-1, 0) : 0;\n    const rightNeighbor = getNeighbor ? +getNeighbor(1, 0) : 0;\n    const topNeighbor = getNeighbor ? +getNeighbor(0, -1) : 0;\n    const bottomNeighbor = getNeighbor ? +getNeighbor(0, 1) : 0;\n\n    const neighborsCount = leftNeighbor + rightNeighbor + topNeighbor + bottomNeighbor;\n\n    if (neighborsCount === 0) {\n      this._basicDot({ x, y, size, rotation: 0 });\n      return;\n    }\n\n    if (neighborsCount > 2 || (leftNeighbor && rightNeighbor) || (topNeighbor && bottomNeighbor)) {\n      this._basicSquare({ x, y, size, rotation: 0 });\n      return;\n    }\n\n    if (neighborsCount === 2) {\n      let rotation = 0;\n\n      if (leftNeighbor && topNeighbor) {\n        rotation = Math.PI / 2;\n      } else if (topNeighbor && rightNeighbor) {\n        rotation = Math.PI;\n      } else if (rightNeighbor && bottomNeighbor) {\n        rotation = -Math.PI / 2;\n      }\n\n      this._basicCornerRounded({ x, y, size, rotation });\n      return;\n    }\n\n    if (neighborsCount === 1) {\n      let rotation = 0;\n\n      if (topNeighbor) {\n        rotation = Math.PI / 2;\n      } else if (rightNeighbor) {\n        rotation = Math.PI;\n      } else if (bottomNeighbor) {\n        rotation = -Math.PI / 2;\n      }\n\n      this._basicSideRounded({ x, y, size, rotation });\n      return;\n    }\n  }\n\n  _drawExtraRounded({ x, y, size, getNeighbor }: DrawArgs): void {\n    const leftNeighbor = getNeighbor ? +getNeighbor(-1, 0) : 0;\n    const rightNeighbor = getNeighbor ? +getNeighbor(1, 0) : 0;\n    const topNeighbor = getNeighbor ? +getNeighbor(0, -1) : 0;\n    const bottomNeighbor = getNeighbor ? +getNeighbor(0, 1) : 0;\n\n    const neighborsCount = leftNeighbor + rightNeighbor + topNeighbor + bottomNeighbor;\n\n    if (neighborsCount === 0) {\n      this._basicDot({ x, y, size, rotation: 0 });\n      return;\n    }\n\n    if (neighborsCount > 2 || (leftNeighbor && rightNeighbor) || (topNeighbor && bottomNeighbor)) {\n      this._basicSquare({ x, y, size, rotation: 0 });\n      return;\n    }\n\n    if (neighborsCount === 2) {\n      let rotation = 0;\n\n      if (leftNeighbor && topNeighbor) {\n        rotation = Math.PI / 2;\n      } else if (topNeighbor && rightNeighbor) {\n        rotation = Math.PI;\n      } else if (rightNeighbor && bottomNeighbor) {\n        rotation = -Math.PI / 2;\n      }\n\n      this._basicCornerExtraRounded({ x, y, size, rotation });\n      return;\n    }\n\n    if (neighborsCount === 1) {\n      let rotation = 0;\n\n      if (topNeighbor) {\n        rotation = Math.PI / 2;\n      } else if (rightNeighbor) {\n        rotation = Math.PI;\n      } else if (bottomNeighbor) {\n        rotation = -Math.PI / 2;\n      }\n\n      this._basicSideRounded({ x, y, size, rotation });\n      return;\n    }\n  }\n\n  _drawClassy({ x, y, size, getNeighbor }: DrawArgs): void {\n    const leftNeighbor = getNeighbor ? +getNeighbor(-1, 0) : 0;\n    const rightNeighbor = getNeighbor ? +getNeighbor(1, 0) : 0;\n    const topNeighbor = getNeighbor ? +getNeighbor(0, -1) : 0;\n    const bottomNeighbor = getNeighbor ? +getNeighbor(0, 1) : 0;\n\n    const neighborsCount = leftNeighbor + rightNeighbor + topNeighbor + bottomNeighbor;\n\n    if (neighborsCount === 0) {\n      this._basicCornersRounded({ x, y, size, rotation: Math.PI / 2 });\n      return;\n    }\n\n    if (!leftNeighbor && !topNeighbor) {\n      this._basicCornerRounded({ x, y, size, rotation: -Math.PI / 2 });\n      return;\n    }\n\n    if (!rightNeighbor && !bottomNeighbor) {\n      this._basicCornerRounded({ x, y, size, rotation: Math.PI / 2 });\n      return;\n    }\n\n    this._basicSquare({ x, y, size, rotation: 0 });\n  }\n\n  _drawClassyRounded({ x, y, size, getNeighbor }: DrawArgs): void {\n    const leftNeighbor = getNeighbor ? +getNeighbor(-1, 0) : 0;\n    const rightNeighbor = getNeighbor ? +getNeighbor(1, 0) : 0;\n    const topNeighbor = getNeighbor ? +getNeighbor(0, -1) : 0;\n    const bottomNeighbor = getNeighbor ? +getNeighbor(0, 1) : 0;\n\n    const neighborsCount = leftNeighbor + rightNeighbor + topNeighbor + bottomNeighbor;\n\n    if (neighborsCount === 0) {\n      this._basicCornersRounded({ x, y, size, rotation: Math.PI / 2 });\n      return;\n    }\n\n    if (!leftNeighbor && !topNeighbor) {\n      this._basicCornerExtraRounded({ x, y, size, rotation: -Math.PI / 2 });\n      return;\n    }\n\n    if (!rightNeighbor && !bottomNeighbor) {\n      this._basicCornerExtraRounded({ x, y, size, rotation: Math.PI / 2 });\n      return;\n    }\n\n    this._basicSquare({ x, y, size, rotation: 0 });\n  }\n}\n", "import { DotTypes } from \"../types\";\n\nexport default {\n  dots: \"dots\",\n  rounded: \"rounded\",\n  classy: \"classy\",\n  classyRounded: \"classy-rounded\",\n  square: \"square\",\n  extraRounded: \"extra-rounded\"\n} as DotTypes;\n", "import cornerSquareTypes from \"../../constants/cornerSquareTypes\";\nimport { CornerSquareType, DrawArgs, BasicFigureDrawArgs, RotateFigureArgs } from \"../../types\";\n\nexport default class QRCornerSquare {\n  _element?: SVGElement;\n  _svg: SVGElement;\n  _type: CornerSquareType;\n\n  constructor({ svg, type }: { svg: SVGElement; type: CornerSquareType }) {\n    this._svg = svg;\n    this._type = type;\n  }\n\n  draw(x: number, y: number, size: number, rotation: number): void {\n    const type = this._type;\n    let drawFunction;\n\n    switch (type) {\n      case cornerSquareTypes.square:\n        drawFunction = this._drawSquare;\n        break;\n      case cornerSquareTypes.extraRounded:\n        drawFunction = this._drawExtraRounded;\n        break;\n      case cornerSquareTypes.dot:\n      default:\n        drawFunction = this._drawDot;\n    }\n\n    drawFunction.call(this, { x, y, size, rotation });\n  }\n\n  _rotateFigure({ x, y, size, rotation = 0, draw }: RotateFigureArgs): void {\n    const cx = x + size / 2;\n    const cy = y + size / 2;\n\n    draw();\n    this._element?.setAttribute(\"transform\", `rotate(${(180 * rotation) / Math.PI},${cx},${cy})`);\n  }\n\n  _basicDot(args: BasicFigureDrawArgs): void {\n    const { size, x, y } = args;\n    const dotSize = size / 7;\n\n    this._rotateFigure({\n      ...args,\n      draw: () => {\n        this._element = document.createElementNS(\"http://www.w3.org/2000/svg\", \"path\");\n        this._element.setAttribute(\"clip-rule\", \"evenodd\");\n        this._element.setAttribute(\n          \"d\",\n          `M ${x + size / 2} ${y}` + // M cx, y //  Move to top of ring\n            `a ${size / 2} ${size / 2} 0 1 0 0.1 0` + // a outerRadius, outerRadius, 0, 1, 0, 1, 0 // Draw outer arc, but don't close it\n            `z` + // Z // Close the outer shape\n            `m 0 ${dotSize}` + // m -1 outerRadius-innerRadius // Move to top point of inner radius\n            `a ${size / 2 - dotSize} ${size / 2 - dotSize} 0 1 1 -0.1 0` + // a innerRadius, innerRadius, 0, 1, 1, -1, 0 // Draw inner arc, but don't close it\n            `Z` // Z // Close the inner ring. Actually will still work without, but inner ring will have one unit missing in stroke\n        );\n      }\n    });\n  }\n\n  _basicSquare(args: BasicFigureDrawArgs): void {\n    const { size, x, y } = args;\n    const dotSize = size / 7;\n\n    this._rotateFigure({\n      ...args,\n      draw: () => {\n        this._element = document.createElementNS(\"http://www.w3.org/2000/svg\", \"path\");\n        this._element.setAttribute(\"clip-rule\", \"evenodd\");\n        this._element.setAttribute(\n          \"d\",\n          `M ${x} ${y}` +\n            `v ${size}` +\n            `h ${size}` +\n            `v ${-size}` +\n            `z` +\n            `M ${x + dotSize} ${y + dotSize}` +\n            `h ${size - 2 * dotSize}` +\n            `v ${size - 2 * dotSize}` +\n            `h ${-size + 2 * dotSize}` +\n            `z`\n        );\n      }\n    });\n  }\n\n  _basicExtraRounded(args: BasicFigureDrawArgs): void {\n    const { size, x, y } = args;\n    const dotSize = size / 7;\n\n    this._rotateFigure({\n      ...args,\n      draw: () => {\n        this._element = document.createElementNS(\"http://www.w3.org/2000/svg\", \"path\");\n        this._element.setAttribute(\"clip-rule\", \"evenodd\");\n        this._element.setAttribute(\n          \"d\",\n          `M ${x} ${y + 2.5 * dotSize}` +\n            `v ${2 * dotSize}` +\n            `a ${2.5 * dotSize} ${2.5 * dotSize}, 0, 0, 0, ${dotSize * 2.5} ${dotSize * 2.5}` +\n            `h ${2 * dotSize}` +\n            `a ${2.5 * dotSize} ${2.5 * dotSize}, 0, 0, 0, ${dotSize * 2.5} ${-dotSize * 2.5}` +\n            `v ${-2 * dotSize}` +\n            `a ${2.5 * dotSize} ${2.5 * dotSize}, 0, 0, 0, ${-dotSize * 2.5} ${-dotSize * 2.5}` +\n            `h ${-2 * dotSize}` +\n            `a ${2.5 * dotSize} ${2.5 * dotSize}, 0, 0, 0, ${-dotSize * 2.5} ${dotSize * 2.5}` +\n            `M ${x + 2.5 * dotSize} ${y + dotSize}` +\n            `h ${2 * dotSize}` +\n            `a ${1.5 * dotSize} ${1.5 * dotSize}, 0, 0, 1, ${dotSize * 1.5} ${dotSize * 1.5}` +\n            `v ${2 * dotSize}` +\n            `a ${1.5 * dotSize} ${1.5 * dotSize}, 0, 0, 1, ${-dotSize * 1.5} ${dotSize * 1.5}` +\n            `h ${-2 * dotSize}` +\n            `a ${1.5 * dotSize} ${1.5 * dotSize}, 0, 0, 1, ${-dotSize * 1.5} ${-dotSize * 1.5}` +\n            `v ${-2 * dotSize}` +\n            `a ${1.5 * dotSize} ${1.5 * dotSize}, 0, 0, 1, ${dotSize * 1.5} ${-dotSize * 1.5}`\n        );\n      }\n    });\n  }\n\n  _drawDot({ x, y, size, rotation }: DrawArgs): void {\n    this._basicDot({ x, y, size, rotation });\n  }\n\n  _drawSquare({ x, y, size, rotation }: DrawArgs): void {\n    this._basicSquare({ x, y, size, rotation });\n  }\n\n  _drawExtraRounded({ x, y, size, rotation }: DrawArgs): void {\n    this._basicExtraRounded({ x, y, size, rotation });\n  }\n}\n", "import { CornerSquareTypes } from \"../types\";\n\nexport default {\n  dot: \"dot\",\n  square: \"square\",\n  extraRounded: \"extra-rounded\"\n} as CornerSquareTypes;\n", "import cornerDotTypes from \"../../constants/cornerDotTypes\";\nimport { CornerDotType, RotateFigureArgs, BasicFigureDrawArgs, DrawArgs } from \"../../types\";\n\nexport default class QRCornerDot {\n  _element?: SVGElement;\n  _svg: SVGElement;\n  _type: CornerDotType;\n\n  constructor({ svg, type }: { svg: SVGElement; type: CornerDotType }) {\n    this._svg = svg;\n    this._type = type;\n  }\n\n  draw(x: number, y: number, size: number, rotation: number): void {\n    const type = this._type;\n    let drawFunction;\n\n    switch (type) {\n      case cornerDotTypes.square:\n        drawFunction = this._drawSquare;\n        break;\n      case cornerDotTypes.dot:\n      default:\n        drawFunction = this._drawDot;\n    }\n\n    drawFunction.call(this, { x, y, size, rotation });\n  }\n\n  _rotateFigure({ x, y, size, rotation = 0, draw }: RotateFigureArgs): void {\n    const cx = x + size / 2;\n    const cy = y + size / 2;\n\n    draw();\n    this._element?.setAttribute(\"transform\", `rotate(${(180 * rotation) / Math.PI},${cx},${cy})`);\n  }\n\n  _basicDot(args: BasicFigureDrawArgs): void {\n    const { size, x, y } = args;\n\n    this._rotateFigure({\n      ...args,\n      draw: () => {\n        this._element = document.createElementNS(\"http://www.w3.org/2000/svg\", \"circle\");\n        this._element.setAttribute(\"cx\", String(x + size / 2));\n        this._element.setAttribute(\"cy\", String(y + size / 2));\n        this._element.setAttribute(\"r\", String(size / 2));\n      }\n    });\n  }\n\n  _basicSquare(args: BasicFigureDrawArgs): void {\n    const { size, x, y } = args;\n\n    this._rotateFigure({\n      ...args,\n      draw: () => {\n        this._element = document.createElementNS(\"http://www.w3.org/2000/svg\", \"rect\");\n        this._element.setAttribute(\"x\", String(x));\n        this._element.setAttribute(\"y\", String(y));\n        this._element.setAttribute(\"width\", String(size));\n        this._element.setAttribute(\"height\", String(size));\n      }\n    });\n  }\n\n  _drawDot({ x, y, size, rotation }: DrawArgs): void {\n    this._basicDot({ x, y, size, rotation });\n  }\n\n  _drawSquare({ x, y, size, rotation }: DrawArgs): void {\n    this._basicSquare({ x, y, size, rotation });\n  }\n}\n", "import { CornerDotTypes } from \"../types\";\n\nexport default {\n  dot: \"dot\",\n  square: \"square\"\n} as CornerDotTypes;\n", "import { ShapeTypes } from \"../types\";\n\nexport default {\n  square: \"square\",\n  circle: \"circle\"\n} as ShapeTypes;\n", "import calculateImageSize from \"../tools/calculateImageSize\";\nimport toDataUrl from \"../tools/toDataUrl\";\nimport errorCorrectionPercents from \"../constants/errorCorrectionPercents\";\nimport QRDot from \"../figures/dot/QRDot\";\nimport QRCornerSquare from \"../figures/cornerSquare/QRCornerSquare\";\nimport QRCornerDot from \"../figures/cornerDot/QRCornerDot\";\nimport { RequiredOptions } from \"./QROptions\";\nimport gradientTypes from \"../constants/gradientTypes\";\nimport shapeTypes from \"../constants/shapeTypes\";\nimport { QRCode, FilterFunction, Gradient } from \"../types\";\n\nconst squareMask = [\n  [1, 1, 1, 1, 1, 1, 1],\n  [1, 0, 0, 0, 0, 0, 1],\n  [1, 0, 0, 0, 0, 0, 1],\n  [1, 0, 0, 0, 0, 0, 1],\n  [1, 0, 0, 0, 0, 0, 1],\n  [1, 0, 0, 0, 0, 0, 1],\n  [1, 1, 1, 1, 1, 1, 1]\n];\n\nconst dotMask = [\n  [0, 0, 0, 0, 0, 0, 0],\n  [0, 0, 0, 0, 0, 0, 0],\n  [0, 0, 1, 1, 1, 0, 0],\n  [0, 0, 1, 1, 1, 0, 0],\n  [0, 0, 1, 1, 1, 0, 0],\n  [0, 0, 0, 0, 0, 0, 0],\n  [0, 0, 0, 0, 0, 0, 0]\n];\n\nexport default class QRSVG {\n  _element: SVGElement;\n  _defs: SVGElement;\n  _backgroundClipPath?: SVGElement;\n  _dotsClipPath?: SVGElement;\n  _cornersSquareClipPath?: SVGElement;\n  _cornersDotClipPath?: SVGElement;\n  _options: RequiredOptions;\n  _qr?: QRCode;\n  _image?: HTMLImageElement;\n\n  //TODO don't pass all options to this class\n  constructor(options: RequiredOptions) {\n    this._element = document.createElementNS(\"http://www.w3.org/2000/svg\", \"svg\");\n    this._element.setAttribute(\"width\", String(options.width));\n    this._element.setAttribute(\"height\", String(options.height));\n    this._defs = document.createElementNS(\"http://www.w3.org/2000/svg\", \"defs\");\n    this._element.appendChild(this._defs);\n\n    this._options = options;\n  }\n\n  get width(): number {\n    return this._options.width;\n  }\n\n  get height(): number {\n    return this._options.height;\n  }\n\n  getElement(): SVGElement {\n    return this._element;\n  }\n\n  async drawQR(qr: QRCode): Promise<void> {\n    const count = qr.getModuleCount();\n    const minSize = Math.min(this._options.width, this._options.height) - this._options.margin * 2;\n    const realQRSize = this._options.shape === shapeTypes.circle ? minSize / Math.sqrt(2) : minSize;\n    const dotSize = Math.floor(realQRSize / count);\n    let drawImageSize = {\n      hideXDots: 0,\n      hideYDots: 0,\n      width: 0,\n      height: 0\n    };\n\n    this._qr = qr;\n\n    if (this._options.image) {\n      //We need it to get image size\n      await this.loadImage();\n      if (!this._image) return;\n      const { imageOptions, qrOptions } = this._options;\n      const coverLevel = imageOptions.imageSize * errorCorrectionPercents[qrOptions.errorCorrectionLevel];\n      const maxHiddenDots = Math.floor(coverLevel * count * count);\n\n      drawImageSize = calculateImageSize({\n        originalWidth: this._image.width,\n        originalHeight: this._image.height,\n        maxHiddenDots,\n        maxHiddenAxisDots: count - 14,\n        dotSize\n      });\n    }\n\n    this.drawBackground();\n    this.drawDots((i: number, j: number): boolean => {\n      if (this._options.imageOptions.hideBackgroundDots) {\n        if (\n          i >= (count - drawImageSize.hideXDots) / 2 &&\n          i < (count + drawImageSize.hideXDots) / 2 &&\n          j >= (count - drawImageSize.hideYDots) / 2 &&\n          j < (count + drawImageSize.hideYDots) / 2\n        ) {\n          return false;\n        }\n      }\n\n      if (squareMask[i]?.[j] || squareMask[i - count + 7]?.[j] || squareMask[i]?.[j - count + 7]) {\n        return false;\n      }\n\n      if (dotMask[i]?.[j] || dotMask[i - count + 7]?.[j] || dotMask[i]?.[j - count + 7]) {\n        return false;\n      }\n\n      return true;\n    });\n    this.drawCorners();\n\n    if (this._options.image) {\n      await this.drawImage({ width: drawImageSize.width, height: drawImageSize.height, count, dotSize });\n    }\n  }\n\n  drawBackground(): void {\n    const element = this._element;\n    const options = this._options;\n\n    if (element) {\n      const gradientOptions = options.backgroundOptions?.gradient;\n      const color = options.backgroundOptions?.color;\n\n      if (gradientOptions || color) {\n        this._createColor({\n          options: gradientOptions,\n          color: color,\n          additionalRotation: 0,\n          x: 0,\n          y: 0,\n          height: options.height,\n          width: options.width,\n          name: \"background-color\"\n        });\n      }\n\n      if (options.backgroundOptions?.round) {\n        const size = Math.min(options.width, options.height);\n        const element = document.createElementNS(\"http://www.w3.org/2000/svg\", \"rect\");\n        this._backgroundClipPath = document.createElementNS(\"http://www.w3.org/2000/svg\", \"clipPath\");\n        this._backgroundClipPath.setAttribute(\"id\", \"clip-path-background-color\");\n        this._defs.appendChild(this._backgroundClipPath);\n\n        element.setAttribute(\"x\", String((options.width - size) / 2));\n        element.setAttribute(\"y\", String((options.height - size) / 2));\n        element.setAttribute(\"width\", String(size));\n        element.setAttribute(\"height\", String(size));\n        element.setAttribute(\"rx\", String((size / 2) * options.backgroundOptions.round));\n\n        this._backgroundClipPath.appendChild(element);\n      }\n    }\n  }\n\n  drawDots(filter?: FilterFunction): void {\n    if (!this._qr) {\n      throw \"QR code is not defined\";\n    }\n\n    const options = this._options;\n    const count = this._qr.getModuleCount();\n\n    if (count > options.width || count > options.height) {\n      throw \"The canvas is too small.\";\n    }\n\n    const minSize = Math.min(options.width, options.height) - options.margin * 2;\n    const realQRSize = options.shape === shapeTypes.circle ? minSize / Math.sqrt(2) : minSize;\n    const dotSize = Math.floor(realQRSize / count);\n    const xBeginning = Math.floor((options.width - count * dotSize) / 2);\n    const yBeginning = Math.floor((options.height - count * dotSize) / 2);\n    const dot = new QRDot({ svg: this._element, type: options.dotsOptions.type });\n\n    this._dotsClipPath = document.createElementNS(\"http://www.w3.org/2000/svg\", \"clipPath\");\n    this._dotsClipPath.setAttribute(\"id\", \"clip-path-dot-color\");\n    this._defs.appendChild(this._dotsClipPath);\n\n    this._createColor({\n      options: options.dotsOptions?.gradient,\n      color: options.dotsOptions.color,\n      additionalRotation: 0,\n      x: 0,\n      y: 0,\n      height: options.height,\n      width: options.width,\n      name: \"dot-color\"\n    });\n\n    for (let i = 0; i < count; i++) {\n      for (let j = 0; j < count; j++) {\n        if (filter && !filter(i, j)) {\n          continue;\n        }\n        if (!this._qr?.isDark(i, j)) {\n          continue;\n        }\n\n        dot.draw(\n          xBeginning + i * dotSize,\n          yBeginning + j * dotSize,\n          dotSize,\n          (xOffset: number, yOffset: number): boolean => {\n            if (i + xOffset < 0 || j + yOffset < 0 || i + xOffset >= count || j + yOffset >= count) return false;\n            if (filter && !filter(i + xOffset, j + yOffset)) return false;\n            return !!this._qr && this._qr.isDark(i + xOffset, j + yOffset);\n          }\n        );\n\n        if (dot._element && this._dotsClipPath) {\n          this._dotsClipPath.appendChild(dot._element);\n        }\n      }\n    }\n\n    if (options.shape === shapeTypes.circle) {\n      const additionalDots = Math.floor((minSize / dotSize - count) / 2);\n      const fakeCount = count + additionalDots * 2;\n      const xFakeBeginning = xBeginning - additionalDots * dotSize;\n      const yFakeBeginning = yBeginning - additionalDots * dotSize;\n      const fakeMatrix: number[][] = [];\n      const center = Math.floor(fakeCount / 2);\n\n      for (let i = 0; i < fakeCount; i++) {\n        fakeMatrix[i] = [];\n        for (let j = 0; j < fakeCount; j++) {\n          if (\n            i >= additionalDots - 1 &&\n            i <= fakeCount - additionalDots &&\n            j >= additionalDots - 1 &&\n            j <= fakeCount - additionalDots\n          ) {\n            fakeMatrix[i][j] = 0;\n            continue;\n          }\n\n          if (Math.sqrt((i - center) * (i - center) + (j - center) * (j - center)) > center) {\n            fakeMatrix[i][j] = 0;\n            continue;\n          }\n\n          //Get random dots from QR code to show it outside of QR code\n          fakeMatrix[i][j] = this._qr.isDark(\n            j - 2 * additionalDots < 0 ? j : j >= count ? j - 2 * additionalDots : j - additionalDots,\n            i - 2 * additionalDots < 0 ? i : i >= count ? i - 2 * additionalDots : i - additionalDots\n          )\n            ? 1\n            : 0;\n        }\n      }\n\n      for (let i = 0; i < fakeCount; i++) {\n        for (let j = 0; j < fakeCount; j++) {\n          if (!fakeMatrix[i][j]) continue;\n\n          dot.draw(\n            xFakeBeginning + i * dotSize,\n            yFakeBeginning + j * dotSize,\n            dotSize,\n            (xOffset: number, yOffset: number): boolean => {\n              return !!fakeMatrix[i + xOffset]?.[j + yOffset];\n            }\n          );\n          if (dot._element && this._dotsClipPath) {\n            this._dotsClipPath.appendChild(dot._element);\n          }\n        }\n      }\n    }\n  }\n\n  drawCorners(): void {\n    if (!this._qr) {\n      throw \"QR code is not defined\";\n    }\n\n    const element = this._element;\n    const options = this._options;\n\n    if (!element) {\n      throw \"Element code is not defined\";\n    }\n\n    const count = this._qr.getModuleCount();\n    const minSize = Math.min(options.width, options.height) - options.margin * 2;\n    const realQRSize = options.shape === shapeTypes.circle ? minSize / Math.sqrt(2) : minSize;\n    const dotSize = Math.floor(realQRSize / count);\n    const cornersSquareSize = dotSize * 7;\n    const cornersDotSize = dotSize * 3;\n    const xBeginning = Math.floor((options.width - count * dotSize) / 2);\n    const yBeginning = Math.floor((options.height - count * dotSize) / 2);\n\n    [\n      [0, 0, 0],\n      [1, 0, Math.PI / 2],\n      [0, 1, -Math.PI / 2]\n    ].forEach(([column, row, rotation]) => {\n      const x = xBeginning + column * dotSize * (count - 7);\n      const y = yBeginning + row * dotSize * (count - 7);\n      let cornersSquareClipPath = this._dotsClipPath;\n      let cornersDotClipPath = this._dotsClipPath;\n\n      if (options.cornersSquareOptions?.gradient || options.cornersSquareOptions?.color) {\n        cornersSquareClipPath = document.createElementNS(\"http://www.w3.org/2000/svg\", \"clipPath\");\n        cornersSquareClipPath.setAttribute(\"id\", `clip-path-corners-square-color-${column}-${row}`);\n        this._defs.appendChild(cornersSquareClipPath);\n        this._cornersSquareClipPath = this._cornersDotClipPath = cornersDotClipPath = cornersSquareClipPath;\n\n        this._createColor({\n          options: options.cornersSquareOptions?.gradient,\n          color: options.cornersSquareOptions?.color,\n          additionalRotation: rotation,\n          x,\n          y,\n          height: cornersSquareSize,\n          width: cornersSquareSize,\n          name: `corners-square-color-${column}-${row}`\n        });\n      }\n\n      if (options.cornersSquareOptions?.type) {\n        const cornersSquare = new QRCornerSquare({ svg: this._element, type: options.cornersSquareOptions.type });\n\n        cornersSquare.draw(x, y, cornersSquareSize, rotation);\n\n        if (cornersSquare._element && cornersSquareClipPath) {\n          cornersSquareClipPath.appendChild(cornersSquare._element);\n        }\n      } else {\n        const dot = new QRDot({ svg: this._element, type: options.dotsOptions.type });\n\n        for (let i = 0; i < squareMask.length; i++) {\n          for (let j = 0; j < squareMask[i].length; j++) {\n            if (!squareMask[i]?.[j]) {\n              continue;\n            }\n\n            dot.draw(\n              x + i * dotSize,\n              y + j * dotSize,\n              dotSize,\n              (xOffset: number, yOffset: number): boolean => !!squareMask[i + xOffset]?.[j + yOffset]\n            );\n\n            if (dot._element && cornersSquareClipPath) {\n              cornersSquareClipPath.appendChild(dot._element);\n            }\n          }\n        }\n      }\n\n      if (options.cornersDotOptions?.gradient || options.cornersDotOptions?.color) {\n        cornersDotClipPath = document.createElementNS(\"http://www.w3.org/2000/svg\", \"clipPath\");\n        cornersDotClipPath.setAttribute(\"id\", `clip-path-corners-dot-color-${column}-${row}`);\n        this._defs.appendChild(cornersDotClipPath);\n        this._cornersDotClipPath = cornersDotClipPath;\n\n        this._createColor({\n          options: options.cornersDotOptions?.gradient,\n          color: options.cornersDotOptions?.color,\n          additionalRotation: rotation,\n          x: x + dotSize * 2,\n          y: y + dotSize * 2,\n          height: cornersDotSize,\n          width: cornersDotSize,\n          name: `corners-dot-color-${column}-${row}`\n        });\n      }\n\n      if (options.cornersDotOptions?.type) {\n        const cornersDot = new QRCornerDot({ svg: this._element, type: options.cornersDotOptions.type });\n\n        cornersDot.draw(x + dotSize * 2, y + dotSize * 2, cornersDotSize, rotation);\n\n        if (cornersDot._element && cornersDotClipPath) {\n          cornersDotClipPath.appendChild(cornersDot._element);\n        }\n      } else {\n        const dot = new QRDot({ svg: this._element, type: options.dotsOptions.type });\n\n        for (let i = 0; i < dotMask.length; i++) {\n          for (let j = 0; j < dotMask[i].length; j++) {\n            if (!dotMask[i]?.[j]) {\n              continue;\n            }\n\n            dot.draw(\n              x + i * dotSize,\n              y + j * dotSize,\n              dotSize,\n              (xOffset: number, yOffset: number): boolean => !!dotMask[i + xOffset]?.[j + yOffset]\n            );\n\n            if (dot._element && cornersDotClipPath) {\n              cornersDotClipPath.appendChild(dot._element);\n            }\n          }\n        }\n      }\n    });\n  }\n\n  loadImage(): Promise<void> {\n    return new Promise((resolve, reject) => {\n      const options = this._options;\n      const image = new Image();\n\n      if (!options.image) {\n        return reject(\"Image is not defined\");\n      }\n\n      if (typeof options.imageOptions.crossOrigin === \"string\") {\n        image.crossOrigin = options.imageOptions.crossOrigin;\n      }\n\n      this._image = image;\n      image.onload = (): void => {\n        resolve();\n      };\n      image.src = options.image;\n    });\n  }\n\n  async drawImage({\n    width,\n    height,\n    count,\n    dotSize\n  }: {\n    width: number;\n    height: number;\n    count: number;\n    dotSize: number;\n  }): Promise<void> {\n    const options = this._options;\n    const xBeginning = Math.floor((options.width - count * dotSize) / 2);\n    const yBeginning = Math.floor((options.height - count * dotSize) / 2);\n    const dx = xBeginning + options.imageOptions.margin + (count * dotSize - width) / 2;\n    const dy = yBeginning + options.imageOptions.margin + (count * dotSize - height) / 2;\n    const dw = width - options.imageOptions.margin * 2;\n    const dh = height - options.imageOptions.margin * 2;\n\n    const image = document.createElementNS(\"http://www.w3.org/2000/svg\", \"image\");\n    image.setAttribute(\"x\", String(dx));\n    image.setAttribute(\"y\", String(dy));\n    image.setAttribute(\"width\", `${dw}px`);\n    image.setAttribute(\"height\", `${dh}px`);\n\n    const imageUrl = await toDataUrl(options.image || \"\");\n\n    image.setAttribute(\"href\", imageUrl || \"\");\n\n    this._element.appendChild(image);\n  }\n\n  _createColor({\n    options,\n    color,\n    additionalRotation,\n    x,\n    y,\n    height,\n    width,\n    name\n  }: {\n    options?: Gradient;\n    color?: string;\n    additionalRotation: number;\n    x: number;\n    y: number;\n    height: number;\n    width: number;\n    name: string;\n  }): void {\n    const size = width > height ? width : height;\n    const rect = document.createElementNS(\"http://www.w3.org/2000/svg\", \"rect\");\n    rect.setAttribute(\"x\", String(x));\n    rect.setAttribute(\"y\", String(y));\n    rect.setAttribute(\"height\", String(height));\n    rect.setAttribute(\"width\", String(width));\n    rect.setAttribute(\"clip-path\", `url('#clip-path-${name}')`);\n\n    if (options) {\n      let gradient: SVGElement;\n      if (options.type === gradientTypes.radial) {\n        gradient = document.createElementNS(\"http://www.w3.org/2000/svg\", \"radialGradient\");\n        gradient.setAttribute(\"id\", name);\n        gradient.setAttribute(\"gradientUnits\", \"userSpaceOnUse\");\n        gradient.setAttribute(\"fx\", String(x + width / 2));\n        gradient.setAttribute(\"fy\", String(y + height / 2));\n        gradient.setAttribute(\"cx\", String(x + width / 2));\n        gradient.setAttribute(\"cy\", String(y + height / 2));\n        gradient.setAttribute(\"r\", String(size / 2));\n      } else {\n        const rotation = ((options.rotation || 0) + additionalRotation) % (2 * Math.PI);\n        const positiveRotation = (rotation + 2 * Math.PI) % (2 * Math.PI);\n        let x0 = x + width / 2;\n        let y0 = y + height / 2;\n        let x1 = x + width / 2;\n        let y1 = y + height / 2;\n\n        if (\n          (positiveRotation >= 0 && positiveRotation <= 0.25 * Math.PI) ||\n          (positiveRotation > 1.75 * Math.PI && positiveRotation <= 2 * Math.PI)\n        ) {\n          x0 = x0 - width / 2;\n          y0 = y0 - (height / 2) * Math.tan(rotation);\n          x1 = x1 + width / 2;\n          y1 = y1 + (height / 2) * Math.tan(rotation);\n        } else if (positiveRotation > 0.25 * Math.PI && positiveRotation <= 0.75 * Math.PI) {\n          y0 = y0 - height / 2;\n          x0 = x0 - width / 2 / Math.tan(rotation);\n          y1 = y1 + height / 2;\n          x1 = x1 + width / 2 / Math.tan(rotation);\n        } else if (positiveRotation > 0.75 * Math.PI && positiveRotation <= 1.25 * Math.PI) {\n          x0 = x0 + width / 2;\n          y0 = y0 + (height / 2) * Math.tan(rotation);\n          x1 = x1 - width / 2;\n          y1 = y1 - (height / 2) * Math.tan(rotation);\n        } else if (positiveRotation > 1.25 * Math.PI && positiveRotation <= 1.75 * Math.PI) {\n          y0 = y0 + height / 2;\n          x0 = x0 + width / 2 / Math.tan(rotation);\n          y1 = y1 - height / 2;\n          x1 = x1 - width / 2 / Math.tan(rotation);\n        }\n\n        gradient = document.createElementNS(\"http://www.w3.org/2000/svg\", \"linearGradient\");\n        gradient.setAttribute(\"id\", name);\n        gradient.setAttribute(\"gradientUnits\", \"userSpaceOnUse\");\n        gradient.setAttribute(\"x1\", String(Math.round(x0)));\n        gradient.setAttribute(\"y1\", String(Math.round(y0)));\n        gradient.setAttribute(\"x2\", String(Math.round(x1)));\n        gradient.setAttribute(\"y2\", String(Math.round(y1)));\n      }\n\n      options.colorStops.forEach(({ offset, color }: { offset: number; color: string }) => {\n        const stop = document.createElementNS(\"http://www.w3.org/2000/svg\", \"stop\");\n        stop.setAttribute(\"offset\", `${100 * offset}%`);\n        stop.setAttribute(\"stop-color\", color);\n        gradient.appendChild(stop);\n      });\n\n      rect.setAttribute(\"fill\", `url('#${name}')`);\n      this._defs.appendChild(gradient);\n    } else if (color) {\n      rect.setAttribute(\"fill\", color);\n    }\n\n    this._element.appendChild(rect);\n  }\n}\n", "interface ImageSizeOptions {\n  originalHeight: number;\n  originalWidth: number;\n  maxHiddenDots: number;\n  maxHiddenAxisDots?: number;\n  dotSize: number;\n}\n\ninterface ImageSizeResult {\n  height: number;\n  width: number;\n  hideYDots: number;\n  hideXDots: number;\n}\n\nexport default function calculateImageSize({\n  originalHeight,\n  originalWidth,\n  maxHiddenDots,\n  maxHiddenAxisDots,\n  dotSize\n}: ImageSizeOptions): ImageSizeResult {\n  const hideDots = { x: 0, y: 0 };\n  const imageSize = { x: 0, y: 0 };\n\n  if (originalHeight <= 0 || originalWidth <= 0 || maxHiddenDots <= 0 || dotSize <= 0) {\n    return {\n      height: 0,\n      width: 0,\n      hideYDots: 0,\n      hideXDots: 0\n    };\n  }\n\n  const k = originalHeight / originalWidth;\n\n  //Getting the maximum possible axis hidden dots\n  hideDots.x = Math.floor(Math.sqrt(maxHiddenDots / k));\n  //The count of hidden dot's can't be less than 1\n  if (hideDots.x <= 0) hideDots.x = 1;\n  //Check the limit of the maximum allowed axis hidden dots\n  if (maxHiddenAxisDots && maxHiddenAxisDots < hideDots.x) hideDots.x = maxHiddenAxisDots;\n  //The count of dots should be odd\n  if (hideDots.x % 2 === 0) hideDots.x--;\n  imageSize.x = hideDots.x * dotSize;\n  //Calculate opposite axis hidden dots based on axis value.\n  //The value will be odd.\n  //We use ceil to prevent dots covering by the image.\n  hideDots.y = 1 + 2 * Math.ceil((hideDots.x * k - 1) / 2);\n  imageSize.y = Math.round(imageSize.x * k);\n  //If the result dots count is bigger than max - then decrease size and calculate again\n  if (hideDots.y * hideDots.x > maxHiddenDots || (maxHiddenAxisDots && maxHiddenAxisDots < hideDots.y)) {\n    if (maxHiddenAxisDots && maxHiddenAxisDots < hideDots.y) {\n      hideDots.y = maxHiddenAxisDots;\n      if (hideDots.y % 2 === 0) hideDots.x--;\n    } else {\n      hideDots.y -= 2;\n    }\n    imageSize.y = hideDots.y * dotSize;\n    hideDots.x = 1 + 2 * Math.ceil((hideDots.y / k - 1) / 2);\n    imageSize.x = Math.round(imageSize.y / k);\n  }\n\n  return {\n    height: imageSize.y,\n    width: imageSize.x,\n    hideYDots: hideDots.y,\n    hideXDots: hideDots.x\n  };\n}\n", "import { GradientTypes } from \"../types\";\n\nexport default {\n  radial: \"radial\",\n  linear: \"linear\"\n} as GradientTypes;\n", "import { DrawTypes } from \"../types\";\n\nexport default {\n  canvas: \"canvas\",\n  svg: \"svg\"\n} as DrawTypes;\n", "import { TypeNumber } from \"../types\";\n\ninterface TypesMap {\n  [key: number]: TypeNumber;\n}\n\nconst qrTypes: TypesMap = {};\n\nfor (let type = 0; type <= 40; type++) {\n  qrTypes[type] = type as TypeNumber;\n}\n\n// 0 types is autodetect\n\n// types = {\n//     0: 0,\n//     1: 1,\n//     ...\n//     40: 40\n// }\n\nexport default qrTypes;\n", "import qrTypes from \"../constants/qrTypes\";\nimport drawTypes from \"../constants/drawTypes\";\nimport shapeTypes from \"../constants/shapeTypes\";\nimport errorCorrectionLevels from \"../constants/errorCorrectionLevels\";\nimport { ShapeType, DotType, Options, TypeNumber, ErrorCorrectionLevel, Mode, DrawType, Gradient } from \"../types\";\n\nexport interface RequiredOptions extends Options {\n  type: DrawType;\n  shape: ShapeType;\n  width: number;\n  height: number;\n  margin: number;\n  data: string;\n  qrOptions: {\n    typeNumber: TypeNumber;\n    mode?: Mode;\n    errorCorrectionLevel: ErrorCorrectionLevel;\n  };\n  imageOptions: {\n    hideBackgroundDots: boolean;\n    imageSize: number;\n    crossOrigin?: string;\n    margin: number;\n  };\n  dotsOptions: {\n    type: DotType;\n    color: string;\n    gradient?: Gradient;\n  };\n  backgroundOptions: {\n    round: number;\n    color: string;\n    gradient?: Gradient;\n  };\n}\n\nconst defaultOptions: RequiredOptions = {\n  type: drawTypes.canvas,\n  shape: shapeTypes.square,\n  width: 300,\n  height: 300,\n  data: \"\",\n  margin: 0,\n  qrOptions: {\n    typeNumber: qrTypes[0],\n    mode: undefined,\n    errorCorrectionLevel: errorCorrectionLevels.Q\n  },\n  imageOptions: {\n    hideBackgroundDots: true,\n    imageSize: 0.4,\n    crossOrigin: undefined,\n    margin: 0\n  },\n  dotsOptions: {\n    type: \"square\",\n    color: \"#000\"\n  },\n  backgroundOptions: {\n    round: 0,\n    color: \"#fff\"\n  }\n};\n\nexport default defaultOptions;\n", "import { ErrorCorrectionLevel } from \"../types\";\n\ninterface ErrorCorrectionLevels {\n  [key: string]: ErrorCorrectionLevel;\n}\n\nexport default {\n  L: \"L\",\n  M: \"M\",\n  Q: \"Q\",\n  H: \"H\"\n} as ErrorCorrectionLevels;\n", "import { RequiredOptions } from \"../core/QROptions\";\nimport { Gradient } from \"../types\";\n\nfunction sanitizeGradient(gradient: Gradient): Gradient {\n  const newGradient = { ...gradient };\n\n  if (!newGradient.colorStops || !newGradient.colorStops.length) {\n    throw \"Field 'colorStops' is required in gradient\";\n  }\n\n  if (newGradient.rotation) {\n    newGradient.rotation = Number(newGradient.rotation);\n  } else {\n    newGradient.rotation = 0;\n  }\n\n  newGradient.colorStops = newGradient.colorStops.map((colorStop: { offset: number; color: string }) => ({\n    ...colorStop,\n    offset: Number(colorStop.offset)\n  }));\n\n  return newGradient;\n}\n\nexport default function sanitizeOptions(options: RequiredOptions): RequiredOptions {\n  const newOptions = { ...options };\n\n  newOptions.width = Number(newOptions.width);\n  newOptions.height = Number(newOptions.height);\n  newOptions.margin = Number(newOptions.margin);\n  newOptions.imageOptions = {\n    ...newOptions.imageOptions,\n    hideBackgroundDots: Boolean(newOptions.imageOptions.hideBackgroundDots),\n    imageSize: Number(newOptions.imageOptions.imageSize),\n    margin: Number(newOptions.imageOptions.margin)\n  };\n\n  if (newOptions.margin > Math.min(newOptions.width, newOptions.height)) {\n    newOptions.margin = Math.min(newOptions.width, newOptions.height);\n  }\n\n  newOptions.dotsOptions = {\n    ...newOptions.dotsOptions\n  };\n  if (newOptions.dotsOptions.gradient) {\n    newOptions.dotsOptions.gradient = sanitizeGradient(newOptions.dotsOptions.gradient);\n  }\n\n  if (newOptions.cornersSquareOptions) {\n    newOptions.cornersSquareOptions = {\n      ...newOptions.cornersSquareOptions\n    };\n    if (newOptions.cornersSquareOptions.gradient) {\n      newOptions.cornersSquareOptions.gradient = sanitizeGradient(newOptions.cornersSquareOptions.gradient);\n    }\n  }\n\n  if (newOptions.cornersDotOptions) {\n    newOptions.cornersDotOptions = {\n      ...newOptions.cornersDotOptions\n    };\n    if (newOptions.cornersDotOptions.gradient) {\n      newOptions.cornersDotOptions.gradient = sanitizeGradient(newOptions.cornersDotOptions.gradient);\n    }\n  }\n\n  if (newOptions.backgroundOptions) {\n    newOptions.backgroundOptions = {\n      ...newOptions.backgroundOptions\n    };\n    if (newOptions.backgroundOptions.gradient) {\n      newOptions.backgroundOptions.gradient = sanitizeGradient(newOptions.backgroundOptions.gradient);\n    }\n  }\n\n  return newOptions;\n}\n", "import QRCodeStyling from \"./core/QRCodeStyling\";\nimport dotTypes from \"./constants/dotTypes\";\nimport cornerDotTypes from \"./constants/cornerDotTypes\";\nimport cornerSquareTypes from \"./constants/cornerSquareTypes\";\nimport errorCorrectionLevels from \"./constants/errorCorrectionLevels\";\nimport errorCorrectionPercents from \"./constants/errorCorrectionPercents\";\nimport modes from \"./constants/modes\";\nimport qrTypes from \"./constants/qrTypes\";\nimport drawTypes from \"./constants/drawTypes\";\nimport shapeTypes from \"./constants/shapeTypes\";\nimport gradientTypes from \"./constants/gradientTypes\";\n\nexport * from \"./types\";\n\nexport {\n  dotTypes,\n  cornerDotTypes,\n  cornerSquareTypes,\n  errorCorrectionLevels,\n  errorCorrectionPercents,\n  modes,\n  qrTypes,\n  drawTypes,\n  shapeTypes,\n  gradientTypes\n};\n\nexport default QRCodeStyling;\n", "import getMode from \"../tools/getMode\";\nimport mergeDeep from \"../tools/merge\";\nimport downloadURI from \"../tools/downloadURI\";\nimport QRSVG from \"./QRSVG\";\nimport drawTypes from \"../constants/drawTypes\";\n\nimport defaultOptions, { RequiredOptions } from \"./QROptions\";\nimport sanitizeOptions from \"../tools/sanitizeOptions\";\nimport { FileExtension, QRCode, Options, DownloadOptions, ExtensionFunction } from \"../types\";\nimport qrcode from \"qrcode-generator\";\n\nexport default class QRCodeStyling {\n  _options: RequiredOptions;\n  _container?: HTMLElement;\n  _canvas?: HTMLCanvasElement;\n  _svg?: SVGElement;\n  _qr?: QRCode;\n  _extension?: ExtensionFunction;\n  _canvasDrawingPromise?: Promise<void>;\n  _svgDrawingPromise?: Promise<void>;\n\n  constructor(options?: Partial<Options>) {\n    this._options = options ? sanitizeOptions(mergeDeep(defaultOptions, options) as RequiredOptions) : defaultOptions;\n    this.update();\n  }\n\n  static _clearContainer(container?: HTMLElement): void {\n    if (container) {\n      container.innerHTML = \"\";\n    }\n  }\n\n  _setupSvg(): void {\n    if (!this._qr) {\n      return;\n    }\n    const qrSVG = new QRSVG(this._options);\n\n    this._svg = qrSVG.getElement();\n    this._svgDrawingPromise = qrSVG.drawQR(this._qr).then(() => {\n      if (!this._svg) return;\n      this._extension?.(qrSVG.getElement(), this._options);\n    });\n  }\n\n  _setupCanvas(): void {\n    if (!this._qr) {\n      return;\n    }\n\n    this._canvas = document.createElement(\"canvas\");\n    this._canvas.width = this._options.width;\n    this._canvas.height = this._options.height;\n\n    this._setupSvg();\n    this._canvasDrawingPromise = this._svgDrawingPromise?.then(() => {\n      if (!this._svg) return;\n\n      const svg = this._svg;\n      const xml = new XMLSerializer().serializeToString(svg);\n      const svg64 = btoa(xml);\n      const image64 = \"data:image/svg+xml;base64,\" + svg64;\n      const image = new Image();\n\n      return new Promise((resolve) => {\n        image.onload = (): void => {\n          this._canvas?.getContext(\"2d\")?.drawImage(image, 0, 0);\n          resolve();\n        };\n\n        image.src = image64;\n      });\n    });\n  }\n\n  async _getElement(extension: FileExtension = \"png\"): Promise<SVGElement | HTMLCanvasElement | undefined> {\n    if (!this._qr) throw \"QR code is empty\";\n\n    if (extension.toLowerCase() === \"svg\") {\n      if (!this._svg || !this._svgDrawingPromise) {\n        this._setupSvg();\n      }\n      await this._svgDrawingPromise;\n      return this._svg;\n    } else {\n      if (!this._canvas || !this._canvasDrawingPromise) {\n        this._setupCanvas();\n      }\n      await this._canvasDrawingPromise;\n      return this._canvas;\n    }\n  }\n\n  update(options?: Partial<Options>): void {\n    QRCodeStyling._clearContainer(this._container);\n    this._options = options ? sanitizeOptions(mergeDeep(this._options, options) as RequiredOptions) : this._options;\n\n    if (!this._options.data) {\n      return;\n    }\n\n    this._qr = qrcode(this._options.qrOptions.typeNumber, this._options.qrOptions.errorCorrectionLevel);\n    this._qr.addData(this._options.data, this._options.qrOptions.mode || getMode(this._options.data));\n    this._qr.make();\n\n    if (this._options.type === drawTypes.canvas) {\n      this._setupCanvas();\n    } else {\n      this._setupSvg();\n    }\n\n    this.append(this._container);\n  }\n\n  append(container?: HTMLElement): void {\n    if (!container) {\n      return;\n    }\n\n    if (typeof container.appendChild !== \"function\") {\n      throw \"Container should be a single DOM node\";\n    }\n\n    if (this._options.type === drawTypes.canvas) {\n      if (this._canvas) {\n        container.appendChild(this._canvas);\n      }\n    } else {\n      if (this._svg) {\n        container.appendChild(this._svg);\n      }\n    }\n\n    this._container = container;\n  }\n\n  applyExtension(extension: ExtensionFunction): void {\n    if (!extension) {\n      throw \"Extension function should be defined.\";\n    }\n\n    this._extension = extension;\n    this.update();\n  }\n\n  deleteExtension(): void {\n    this._extension = undefined;\n    this.update();\n  }\n\n  async getRawData(extension: FileExtension = \"png\"): Promise<Blob | null> {\n    if (!this._qr) throw \"QR code is empty\";\n    const element = await this._getElement(extension);\n\n    if (!element) {\n      return null;\n    }\n\n    if (extension.toLowerCase() === \"svg\") {\n      const serializer = new XMLSerializer();\n      const source = serializer.serializeToString(element);\n\n      return new Blob(['<?xml version=\"1.0\" standalone=\"no\"?>\\r\\n' + source], { type: \"image/svg+xml\" });\n    } else {\n      return new Promise((resolve) => (element as HTMLCanvasElement).toBlob(resolve, `image/${extension}`, 1));\n    }\n  }\n\n  async download(downloadOptions?: Partial<DownloadOptions> | string): Promise<void> {\n    if (!this._qr) throw \"QR code is empty\";\n    let extension = \"png\" as FileExtension;\n    let name = \"qr\";\n\n    //TODO remove deprecated code in the v2\n    if (typeof downloadOptions === \"string\") {\n      extension = downloadOptions as FileExtension;\n      console.warn(\n        \"Extension is deprecated as argument for 'download' method, please pass object { name: '...', extension: '...' } as argument\"\n      );\n    } else if (typeof downloadOptions === \"object\" && downloadOptions !== null) {\n      if (downloadOptions.name) {\n        name = downloadOptions.name;\n      }\n      if (downloadOptions.extension) {\n        extension = downloadOptions.extension;\n      }\n    }\n\n    const element = await this._getElement(extension);\n\n    if (!element) {\n      return;\n    }\n\n    if (extension.toLowerCase() === \"svg\") {\n      const serializer = new XMLSerializer();\n      let source = serializer.serializeToString(element);\n\n      source = '<?xml version=\"1.0\" standalone=\"no\"?>\\r\\n' + source;\n      const url = \"data:image/svg+xml;charset=utf-8,\" + encodeURIComponent(source);\n      downloadURI(url, `${name}.svg`);\n    } else {\n      const url = (element as HTMLCanvasElement).toDataURL(`image/${extension}`);\n      downloadURI(url, `${name}.${extension}`);\n    }\n  }\n}\n", "import modes from \"../constants/modes\";\nimport { Mode } from \"../types\";\n\nexport default function getMode(data: string): Mode {\n  switch (true) {\n    case /^[0-9]*$/.test(data):\n      return modes.numeric;\n    case /^[0-9A-Z $%*+\\-./:]*$/.test(data):\n      return modes.alphanumeric;\n    default:\n      return modes.byte;\n  }\n}\n", "import { Mode } from \"../types\";\n\ninterface Modes {\n  [key: string]: Mode;\n}\n\nexport default {\n  numeric: \"Numeric\",\n  alphanumeric: \"Alphanumeric\",\n  byte: \"Byte\",\n  kanji: \"Kanji\"\n} as Modes;\n", "// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tif(__webpack_module_cache__[moduleId]) {\n\t\treturn __webpack_module_cache__[moduleId].exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n", "// module exports must be returned from runtime so entry inlining is disabled\n// startup\n// Load entry module and return exports\nreturn __webpack_require__(676);\n", "// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => module['default'] :\n\t\t() => module;\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};", "// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};", "__webpack_require__.o = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop)"],
  "mappings": "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",
  "names": ["root", "factory", "exports", "module", "define", "amd", "self", "t", "e", "r", "qrcode", "typeNumber", "errorCorrectionLevel", "_typeNumber", "_errorCorrectionLevel", "QRErrorCorrectionLevel", "_modules", "_moduleCount", "_dataCache", "_dataList", "_this", "makeImpl", "test", "maskPattern", "moduleCount", "modules", "Array", "row", "col", "setupPositionProbePattern", "setupPositionAdjustPattern", "setupTimingPattern", "setupTypeInfo", "setupTypeNumber", "createData", "mapData", "c", "pos", "QRUtil", "getPatternPosition", "i", "length", "j", "bits", "getBCHTypeNumber", "mod", "Math", "floor", "data", "getBCHTypeInfo", "inc", "bitIndex", "byteIndex", "maskFunc", "getMaskFunction", "dark", "dataList", "rsBlocks", "QRRSBlock", "getRSBlocks", "buffer", "qrBitBuffer", "put", "getMode", "getLength", "getLengthInBits", "write", "totalDataCount", "dataCount", "putBit", "offset", "maxDcCount", "maxEcCount", "dcdata", "ecdata", "dcCount", "ecCount", "totalCount", "max", "getBuffer", "rsPoly", "getErrorCorrectPolynomial", "modPoly", "qrPolynomial", "modIndex", "getAt", "totalCodeCount", "index", "addData", "mode", "newData", "qrNumber", "qrAlphaNum", "qr8BitByte", "qrKanji", "push", "isDark", "getModuleCount", "make", "minLostPoint", "pattern", "lostPoint", "getLostPoint", "getBestMaskPattern", "createTableTag", "cellSize", "margin", "qrHtml", "createSvgTag", "alt", "title", "opts", "arguments", "text", "id", "mr", "rect", "size", "qrSvg", "scalable", "escapeXml", "join", "trim", "createDataURL", "min", "x", "y", "createImgTag", "img", "s", "escaped", "charAt", "createASCII", "r1", "r2", "p", "blocks", "blocksLastLineNoMargin", "ascii", "substring", "white", "black", "line", "renderTo2dContext", "context", "fillStyle", "fillRect", "stringToBytes", "stringToBytesFuncs", "bytes", "charCodeAt", "createStringToBytes", "unicodeData", "numChars", "unicodeMap", "bin", "base64DecodeInputStream", "read", "b", "count", "b0", "b1", "v", "String", "fromCharCode", "unknownChar", "PATTERN_POSITION_TABLE", "G15", "G18", "getBCHDigit", "L", "M", "Q", "H", "digit", "d", "errorCorrectLength", "a", "multiply", "QRMath", "gexp", "type", "sameCount", "darkCount", "abs", "EXP_TABLE", "LOG_TABLE", "n", "num", "shift", "_num", "glog", "ratio", "RS_BLOCK_TABLE", "qrRSBlock", "rsBlock", "list", "_buffer", "_length", "bufIndex", "bit", "_data", "strToNum", "chatToNum", "getCode", "_bytes", "code", "byteArrayOutputStream", "writeByte", "off", "len", "str", "_str", "_pos", "_buflen", "match", "decode", "width", "height", "getPixel", "gif", "_width", "_height", "pixel", "out", "writeString", "writeShort", "raster", "getLZWRaster", "writeBytes", "lzwMinCodeSize", "clearCode", "endCode", "bitLength", "table", "lzwTable", "add", "_out", "_bitLength", "_bitBuffer", "byteOut", "bitOut", "dataIndex", "contains", "indexOf", "flush", "toByteArray", "_map", "_size", "key", "setPixel", "base64", "_base64", "writeEncoded", "encode", "padlen", "toString", "base64EncodeOutputStream", "utf8", "charcode", "o", "isObject", "obj", "isArray", "mergeDeep", "target", "sources", "source", "Object", "keys", "forEach", "targetValue", "sourceValue", "assign", "downloadURI", "uri", "name", "link", "document", "createElement", "download", "href", "body", "appendChild", "click", "removeChild", "toDataURL", "url", "Promise", "resolve", "xhr", "XMLHttpRequest", "onload", "reader", "FileReader", "onloadend", "result", "readAsDataURL", "response", "open", "responseType", "send", "svg", "this", "_svg", "_type", "draw", "getNeighbor", "drawFunction", "_drawDot", "_drawClassy", "_drawClassyRounded", "_drawRounded", "_drawExtraRounded", "_drawSquare", "call", "_rotateFigure", "rotation", "cx", "cy", "_element", "setAttribute", "PI", "_basicDot", "args", "createElementNS", "_basicSquare", "_basicSideRounded", "_basicCornerRounded", "_basicCornerExtraRounded", "_basicCornersRounded", "leftNeighbor", "rightNeighbor", "topNeighbor", "bottomNeighbor", "neighborsCount", "dotSize", "_basicExtraRounded", "u", "squareMask", "dotMask", "options", "_defs", "_options", "getElement", "drawQR", "qr", "minSize", "realQRSize", "shape", "shapeTypes", "sqrt", "drawImageSize", "hideXDots", "hideYDots", "_qr", "image", "loadImage", "f", "_image", "imageOptions", "qrOptions", "coverLevel", "imageSize", "errorCorrectionPercents", "maxHiddenDots", "originalHeight", "originalWidth", "maxHiddenAxisDots", "hideDots", "k", "ceil", "round", "l", "drawBackground", "drawDots", "hideBackgroundDots", "h", "drawCorners", "drawImage", "element", "gradientOptions", "backgroundOptions", "gradient", "color", "_createColor", "additionalRotation", "_backgroundClipPath", "filter", "xBeginning", "yBeginning", "dot", "dotsOptions", "_dotsClipPath", "g", "xOffset", "yOffset", "additionalDots", "fakeCount", "xFakeBeginning", "yFakeBeginning", "_", "center", "C", "cornersSquareSize", "cornersDotSize", "w", "S", "column", "cornersSquareClipPath", "cornersDotClipPath", "cornersSquareOptions", "_cornersSquareClipPath", "_cornersDotClipPath", "D", "P", "cornersSquare", "cornersDotOptions", "cornersDot", "reject", "Image", "crossOrigin", "src", "dx", "dy", "dw", "dh", "imageUrl", "positiveRotation", "x0", "y0", "x1", "y1", "tan", "colorStops", "stop", "qrTypes", "drawTypes", "sanitizeGradient", "newGradient", "Number", "map", "colorStop", "sanitizeOptions", "newOptions", "Boolean", "update", "_clearContainer", "container", "innerHTML", "_setupSvg", "qrSVG", "_svgDrawingPromise", "then", "_extension", "_setupCanvas", "_canvas", "_canvasDrawingPromise", "xml", "XMLSerializer", "serializeToString", "image64", "btoa", "getContext", "_getElement", "extension", "toLowerCase", "QRCodeStyling", "_container", "append", "applyExtension", "deleteExtension", "getRawData", "serializer", "Blob", "toBlob", "downloadOptions", "console", "warn", "encodeURIComponent", "__webpack_module_cache__", "__webpack_require__", "moduleId", "__webpack_modules__", "getter", "__esModule", "definition", "defineProperty", "enumerable", "get", "prop", "prototype", "hasOwnProperty"]
}
